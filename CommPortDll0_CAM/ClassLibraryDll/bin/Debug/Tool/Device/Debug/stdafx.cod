; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\cz\VS\DviceCtrlDlg_new_signal_1\stdafx.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_1BA@JIHHIEDE@?$AAT?$AAy?$AAp?$AAe?$AAL?$AAi?$AAb?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@EAHCMADO@?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@GBFINDKL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@IBECJAAI@?$AAS?$AAE?$AAC?$AAU?$AAR?$AAI?$AAT?$AAY?$AA?$AA@ ; `string'
PUBLIC	??_C@_17OMAOINJK@?$AAS?$AAA?$AAM?$AA?$AA@	; `string'
PUBLIC	??_C@_19HLLLM@?$AAM?$AAi?$AAm?$AAe?$AA?$AA@	; `string'
PUBLIC	??_C@_1BC@MAICEHGI@?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@EKPAFMCP@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@NKMMNMGL@?$AAF?$AAi?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CK@OEKPKBNA@?$AAC?$AAo?$AAm?$AAp?$AAo?$AAn?$AAe?$AAn?$AAt?$AA?5?$AAC?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@KANJNLFF@?$AAC?$AAL?$AAS?$AAI?$AAD?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@EJNEECMJ@?$AAA?$AAp?$AAp?$AAI?$AAD?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl?$AA?$AA@	; `string'
PUBLIC	??_C@_13OPKGLAFF@?$AAB?$AA?$AA@			; `string'
PUBLIC	??_C@_13MKMNOPIJ@?$AAD?$AA?$AA@			; `string'
PUBLIC	??_C@_13LHMFKAAD@?$AAM?$AA?$AA@			; `string'
PUBLIC	??_C@_13HADIAKP@?$AAS?$AA?$AA@			; `string'
PUBLIC	?_AfxInitManaged@@YAHXZ				; _AfxInitManaged
PUBLIC	??_C@_1CK@NMKILLLB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAS?$AAp?$AAa?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CC@FFBCNGIJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@ ; `string'
PUBLIC	?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A ; ATL::_pAtlAutoThreadModule
PUBLIC	?_Min@?$AtlLimits@H@ATL@@2HB			; ATL::AtlLimits<int>::_Min
PUBLIC	?_Max@?$AtlLimits@H@ATL@@2HB			; ATL::AtlLimits<int>::_Max
PUBLIC	?_Min@?$AtlLimits@I@ATL@@2IB			; ATL::AtlLimits<unsigned int>::_Min
PUBLIC	?_Max@?$AtlLimits@I@ATL@@2IB			; ATL::AtlLimits<unsigned int>::_Max
PUBLIC	?_Min@?$AtlLimits@J@ATL@@2JB			; ATL::AtlLimits<long>::_Min
PUBLIC	?_Max@?$AtlLimits@J@ATL@@2JB			; ATL::AtlLimits<long>::_Max
PUBLIC	?_Min@?$AtlLimits@K@ATL@@2KB			; ATL::AtlLimits<unsigned long>::_Min
PUBLIC	?_Max@?$AtlLimits@K@ATL@@2KB			; ATL::AtlLimits<unsigned long>::_Max
PUBLIC	?_Min@?$AtlLimits@_J@ATL@@2_JB			; ATL::AtlLimits<__int64>::_Min
PUBLIC	?_Max@?$AtlLimits@_J@ATL@@2_JB			; ATL::AtlLimits<__int64>::_Max
PUBLIC	?_Min@?$AtlLimits@_K@ATL@@2_KB			; ATL::AtlLimits<unsigned __int64>::_Min
PUBLIC	?_Max@?$AtlLimits@_K@ATL@@2_KB			; ATL::AtlLimits<unsigned __int64>::_Max
PUBLIC	?s_pfnPrevHook@CNoUIAssertHook@ATL@@0P6AHHPADPAH@ZA ; ATL::CNoUIAssertHook::s_pfnPrevHook
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?VT@?$CVarTypeInfo@D@ATL@@2GB			; ATL::CVarTypeInfo<char>::VT
PUBLIC	?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ ; ATL::CVarTypeInfo<char>::pmField
PUBLIC	?VT@?$CVarTypeInfo@E@ATL@@2GB			; ATL::CVarTypeInfo<unsigned char>::VT
PUBLIC	?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ ; ATL::CVarTypeInfo<unsigned char>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAD@ATL@@2GB			; ATL::CVarTypeInfo<char *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ ; ATL::CVarTypeInfo<char *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAE@ATL@@2GB			; ATL::CVarTypeInfo<unsigned char *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ ; ATL::CVarTypeInfo<unsigned char *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@F@ATL@@2GB			; ATL::CVarTypeInfo<short>::VT
PUBLIC	?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ ; ATL::CVarTypeInfo<short>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAF@ATL@@2GB			; ATL::CVarTypeInfo<short *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ ; ATL::CVarTypeInfo<short *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@G@ATL@@2GB			; ATL::CVarTypeInfo<unsigned short>::VT
PUBLIC	?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ ; ATL::CVarTypeInfo<unsigned short>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAG@ATL@@2GB			; ATL::CVarTypeInfo<unsigned short *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ ; ATL::CVarTypeInfo<unsigned short *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@H@ATL@@2GB			; ATL::CVarTypeInfo<int>::VT
PUBLIC	?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ ; ATL::CVarTypeInfo<int>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAH@ATL@@2GB			; ATL::CVarTypeInfo<int *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ ; ATL::CVarTypeInfo<int *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@I@ATL@@2GB			; ATL::CVarTypeInfo<unsigned int>::VT
PUBLIC	?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ ; ATL::CVarTypeInfo<unsigned int>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAI@ATL@@2GB			; ATL::CVarTypeInfo<unsigned int *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ ; ATL::CVarTypeInfo<unsigned int *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@J@ATL@@2GB			; ATL::CVarTypeInfo<long>::VT
PUBLIC	?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ ; ATL::CVarTypeInfo<long>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAJ@ATL@@2GB			; ATL::CVarTypeInfo<long *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ ; ATL::CVarTypeInfo<long *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@K@ATL@@2GB			; ATL::CVarTypeInfo<unsigned long>::VT
PUBLIC	?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ ; ATL::CVarTypeInfo<unsigned long>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAK@ATL@@2GB			; ATL::CVarTypeInfo<unsigned long *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ ; ATL::CVarTypeInfo<unsigned long *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@_J@ATL@@2GB			; ATL::CVarTypeInfo<__int64>::VT
PUBLIC	?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ ; ATL::CVarTypeInfo<__int64>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PA_J@ATL@@2GB		; ATL::CVarTypeInfo<__int64 *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ ; ATL::CVarTypeInfo<__int64 *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@_K@ATL@@2GB			; ATL::CVarTypeInfo<unsigned __int64>::VT
PUBLIC	?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ ; ATL::CVarTypeInfo<unsigned __int64>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PA_K@ATL@@2GB		; ATL::CVarTypeInfo<unsigned __int64 *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ ; ATL::CVarTypeInfo<unsigned __int64 *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@M@ATL@@2GB			; ATL::CVarTypeInfo<float>::VT
PUBLIC	?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ ; ATL::CVarTypeInfo<float>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAM@ATL@@2GB			; ATL::CVarTypeInfo<float *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ ; ATL::CVarTypeInfo<float *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@N@ATL@@2GB			; ATL::CVarTypeInfo<double>::VT
PUBLIC	?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ ; ATL::CVarTypeInfo<double>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAN@ATL@@2GB			; ATL::CVarTypeInfo<double *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ ; ATL::CVarTypeInfo<double *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB	; ATL::CVarTypeInfo<tagVARIANT *>::VT
PUBLIC	?VT@?$CVarTypeInfo@PA_W@ATL@@2GB		; ATL::CVarTypeInfo<wchar_t *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@ ; ATL::CVarTypeInfo<wchar_t *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB		; ATL::CVarTypeInfo<wchar_t * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@ ; ATL::CVarTypeInfo<wchar_t * *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB	; ATL::CVarTypeInfo<IUnknown *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ ; ATL::CVarTypeInfo<IUnknown *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB	; ATL::CVarTypeInfo<IUnknown * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ ; ATL::CVarTypeInfo<IUnknown * *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB	; ATL::CVarTypeInfo<IDispatch *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ ; ATL::CVarTypeInfo<IDispatch *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB	; ATL::CVarTypeInfo<IDispatch * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ ; ATL::CVarTypeInfo<IDispatch * *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB		; ATL::CVarTypeInfo<tagCY>::VT
PUBLIC	?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ ; ATL::CVarTypeInfo<tagCY>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB		; ATL::CVarTypeInfo<tagCY *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ ; ATL::CVarTypeInfo<tagCY *>::pmField
PUBLIC	?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A ; ATL::CFixedStringMgr::s_pLog
PUBLIC	?generic@CArchiveException@@2HB			; CArchiveException::generic
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::c_bIsMFCDLLTraits
PUBLIC	?generic@CFileException@@2HB			; CFileException::generic
PUBLIC	?Millisecond@CFileTime@ATL@@2_KB		; ATL::CFileTime::Millisecond
PUBLIC	?Second@CFileTime@ATL@@2_KB			; ATL::CFileTime::Second
PUBLIC	?Minute@CFileTime@ATL@@2_KB			; ATL::CFileTime::Minute
PUBLIC	?Hour@CFileTime@ATL@@2_KB			; ATL::CFileTime::Hour
PUBLIC	?Day@CFileTime@ATL@@2_KB			; ATL::CFileTime::Day
PUBLIC	?Week@CFileTime@ATL@@2_KB			; ATL::CFileTime::Week
PUBLIC	?szInvalidDateTime@ATL@@3QB_WB			; ATL::szInvalidDateTime
PUBLIC	?szInvalidDateTimeSpan@ATL@@3QB_WB		; ATL::szInvalidDateTimeSpan
PUBLIC	__pIncludeInitManaged
PUBLIC	_LIBID_ATLLib
PUBLIC	_CLSID_Registrar
PUBLIC	_IID_IRegistrar
PUBLIC	_IID_IAxWinHostWindow
PUBLIC	_IID_IAxWinAmbientDispatch
PUBLIC	_IID_IInternalConnection
PUBLIC	_IID_IDocHostUIHandlerDispatch
PUBLIC	_IID_IAxWinHostWindowLic
PUBLIC	_IID_IAxWinAmbientDispatchEx
PUBLIC	___pobjMapEntryFirst
PUBLIC	___pobjMapEntryLast
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
PUBLIC	?_AtlRegisterPerUser@ATL@@3_NA			; ATL::_AtlRegisterPerUser
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	?_pModule@ATL@@3PAVCComModule@1@A		; ATL::_pModule
PUBLIC	?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA	; ATL::CComApartment::ATL_CREATE_OBJECT
PUBLIC	?MAX_VALUE@CRegParser@ATL@@1HB			; ATL::CRegParser::MAX_VALUE
PUBLIC	?MAX_TYPE@CRegParser@ATL@@1HB			; ATL::CRegParser::MAX_TYPE
PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQB_WB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	?cbNeverDelete@CRegParser@ATL@@1HB		; ATL::CRegParser::cbNeverDelete
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
PUBLIC	?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitATL@_WV?$ChTraitsCRT@_W@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<wchar_t,ATL::StrTraitATL<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::c_bIsMFCDLLTraits
PUBLIC	?CLSID_WinFormsControl@@3U_GUID@@B		; CLSID_WinFormsControl
PUBLIC	?createAlphaChannel@CImage@ATL@@2KB		; ATL::CImage::createAlphaChannel
PUBLIC	?excludeGIF@CImage@ATL@@2KB			; ATL::CImage::excludeGIF
PUBLIC	?excludeBMP@CImage@ATL@@2KB			; ATL::CImage::excludeBMP
PUBLIC	?excludeEMF@CImage@ATL@@2KB			; ATL::CImage::excludeEMF
PUBLIC	?excludeWMF@CImage@ATL@@2KB			; ATL::CImage::excludeWMF
PUBLIC	?excludeJPEG@CImage@ATL@@2KB			; ATL::CImage::excludeJPEG
PUBLIC	?excludePNG@CImage@ATL@@2KB			; ATL::CImage::excludePNG
PUBLIC	?excludeTIFF@CImage@ATL@@2KB			; ATL::CImage::excludeTIFF
PUBLIC	?excludeIcon@CImage@ATL@@2KB			; ATL::CImage::excludeIcon
PUBLIC	?excludeOther@CImage@ATL@@2KB			; ATL::CImage::excludeOther
PUBLIC	?excludeDefaultLoad@CImage@ATL@@2KB		; ATL::CImage::excludeDefaultLoad
PUBLIC	?excludeDefaultSave@CImage@ATL@@2KB		; ATL::CImage::excludeDefaultSave
PUBLIC	?excludeValid@CImage@ATL@@2KB			; ATL::CImage::excludeValid
;	COMDAT ?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A
_BSS	SEGMENT
?_pAtlAutoThreadModule@ATL@@3PAUIAtlAutoThreadModule@1@A DD 01H DUP (?) ; ATL::_pAtlAutoThreadModule
_BSS	ENDS
;	COMDAT ?s_pfnPrevHook@CNoUIAssertHook@ATL@@0P6AHHPADPAH@ZA
_BSS	SEGMENT
?s_pfnPrevHook@CNoUIAssertHook@ATL@@0P6AHHPADPAH@ZA DD 01H DUP (?) ; ATL::CNoUIAssertHook::s_pfnPrevHook
_BSS	ENDS
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
;	COMDAT ?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A
_BSS	SEGMENT
?s_pLog@CFixedStringMgr@ATL@@2PAVIFixedStringLog@2@A DD 01H DUP (?) ; ATL::CFixedStringMgr::s_pLog
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?_AtlRegisterPerUser@ATL@@3_NA
_BSS	SEGMENT
?_AtlRegisterPerUser@ATL@@3_NA DB 01H DUP (?)		; ATL::_AtlRegisterPerUser
_BSS	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?_pModule@ATL@@3PAVCComModule@1@A
_BSS	SEGMENT
?_pModule@ATL@@3PAVCComModule@1@A DD 01H DUP (?)	; ATL::_pModule
_BSS	ENDS
;	COMDAT ?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA
_BSS	SEGMENT
?ATL_CREATE_OBJECT@CComApartment@ATL@@2IA DD 01H DUP (?) ; ATL::CComApartment::ATL_CREATE_OBJECT
_BSS	ENDS
_BSS	SEGMENT
_GenericSansSerifFontFamily DD 01H DUP (?)
_GenericSerifFontFamily DD 01H DUP (?)
_GenericMonospaceFontFamily DD 01H DUP (?)
_GenericSansSerifFontFamilyBuffer DB 08H DUP (?)
_GenericSerifFontFamilyBuffer DB 08H DUP (?)
_GenericMonospaceFontFamilyBuffer DB 08H DUP (?)
_GenericTypographicStringFormatBuffer DB 08H DUP (?)
_GenericDefaultStringFormatBuffer DB 08H DUP (?)
_BSS	ENDS
;	COMDAT ?excludeValid@CImage@ATL@@2KB
CONST	SEGMENT
?excludeValid@CImage@ATL@@2KB DD 0800000ffH		; ATL::CImage::excludeValid
CONST	ENDS
;	COMDAT ?excludeDefaultSave@CImage@ATL@@2KB
CONST	SEGMENT
?excludeDefaultSave@CImage@ATL@@2KB DD 08cH		; ATL::CImage::excludeDefaultSave
CONST	ENDS
;	COMDAT ?excludeDefaultLoad@CImage@ATL@@2KB
CONST	SEGMENT
?excludeDefaultLoad@CImage@ATL@@2KB DD 00H		; ATL::CImage::excludeDefaultLoad
CONST	ENDS
;	COMDAT ?excludeOther@CImage@ATL@@2KB
CONST	SEGMENT
?excludeOther@CImage@ATL@@2KB DD 080000000H		; ATL::CImage::excludeOther
CONST	ENDS
;	COMDAT ?excludeIcon@CImage@ATL@@2KB
CONST	SEGMENT
?excludeIcon@CImage@ATL@@2KB DD 080H			; ATL::CImage::excludeIcon
CONST	ENDS
;	COMDAT ?excludeTIFF@CImage@ATL@@2KB
CONST	SEGMENT
?excludeTIFF@CImage@ATL@@2KB DD 040H			; ATL::CImage::excludeTIFF
CONST	ENDS
;	COMDAT ?excludePNG@CImage@ATL@@2KB
CONST	SEGMENT
?excludePNG@CImage@ATL@@2KB DD 020H			; ATL::CImage::excludePNG
CONST	ENDS
;	COMDAT ?excludeJPEG@CImage@ATL@@2KB
CONST	SEGMENT
?excludeJPEG@CImage@ATL@@2KB DD 010H			; ATL::CImage::excludeJPEG
CONST	ENDS
;	COMDAT ?excludeWMF@CImage@ATL@@2KB
CONST	SEGMENT
?excludeWMF@CImage@ATL@@2KB DD 08H			; ATL::CImage::excludeWMF
CONST	ENDS
;	COMDAT ?excludeEMF@CImage@ATL@@2KB
CONST	SEGMENT
?excludeEMF@CImage@ATL@@2KB DD 04H			; ATL::CImage::excludeEMF
CONST	ENDS
;	COMDAT ?excludeBMP@CImage@ATL@@2KB
CONST	SEGMENT
?excludeBMP@CImage@ATL@@2KB DD 02H			; ATL::CImage::excludeBMP
CONST	ENDS
;	COMDAT ?excludeGIF@CImage@ATL@@2KB
CONST	SEGMENT
?excludeGIF@CImage@ATL@@2KB DD 01H			; ATL::CImage::excludeGIF
CONST	ENDS
;	COMDAT ?createAlphaChannel@CImage@ATL@@2KB
CONST	SEGMENT
?createAlphaChannel@CImage@ATL@@2KB DD 01H		; ATL::CImage::createAlphaChannel
CONST	ENDS
;	COMDAT ?CLSID_WinFormsControl@@3U_GUID@@B
CONST	SEGMENT
?CLSID_WinFormsControl@@3U_GUID@@B DD 0b7e7a666H	; CLSID_WinFormsControl
	DW	0d623H
	DW	0457fH
	DB	0a3H
	DB	0aH
	DB	06aH
	DB	049H
	DB	0a3H
	DB	0e5H
	DB	0b4H
	DB	070H
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitATL@_WV?$ChTraitsCRT@_W@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitATL@_WV?$ChTraitsCRT@_W@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB DB 00H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<wchar_t,ATL::StrTraitATL<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@_CSTRING_IMPL_@ATL@@2_NB DB 00H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?cbNeverDelete@CRegParser@ATL@@1HB
CONST	SEGMENT
?cbNeverDelete@CRegParser@ATL@@1HB DD 0cH		; ATL::CRegParser::cbNeverDelete
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQB_WB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQB_WB DD FLAT:??_C@_1M@EJNEECMJ@?$AAA?$AAp?$AAp?$AAI?$AAD?$AA?$AA@ ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:??_C@_1M@KANJNLFF@?$AAC?$AAL?$AAS?$AAI?$AAD?$AA?$AA@
	DD	FLAT:??_C@_1CK@OEKPKBNA@?$AAC?$AAo?$AAm?$AAp?$AAo?$AAn?$AAe?$AAn?$AAt?$AA?5?$AAC?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?$AA@
	DD	FLAT:??_C@_1BC@NKMMNMGL@?$AAF?$AAi?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$AA@
	DD	FLAT:??_C@_1BE@EKPAFMCP@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?$AA@
	DD	FLAT:??_C@_1BC@MAICEHGI@?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AA@
	DD	FLAT:??_C@_19HLLLM@?$AAM?$AAi?$AAm?$AAe?$AA?$AA@
	DD	FLAT:??_C@_17OMAOINJK@?$AAS?$AAA?$AAM?$AA?$AA@
	DD	FLAT:??_C@_1BC@IBECJAAI@?$AAS?$AAE?$AAC?$AAU?$AAR?$AAI?$AAT?$AAY?$AA?$AA@
	DD	FLAT:??_C@_1O@GBFINDKL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?$AA@
	DD	FLAT:??_C@_1BC@EAHCMADO@?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AA?$AA@
	DD	FLAT:??_C@_1BA@JIHHIEDE@?$AAT?$AAy?$AAp?$AAe?$AAL?$AAi?$AAb?$AA?$AA@
CONST	ENDS
;	COMDAT ??_C@_1BA@JIHHIEDE@?$AAT?$AAy?$AAp?$AAe?$AAL?$AAi?$AAb?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@JIHHIEDE@?$AAT?$AAy?$AAp?$AAe?$AAL?$AAi?$AAb?$AA?$AA@ DB 'T', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 'L', 00H, 'i', 00H, 'b', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@EAHCMADO@?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@EAHCMADO@?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AA?$AA@ DB 'S'
	DB	00H, 'o', 00H, 'f', 00H, 't', 00H, 'w', 00H, 'a', 00H, 'r', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@GBFINDKL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?$AA@
CONST	SEGMENT
??_C@_1O@GBFINDKL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?$AA@ DB 'S', 00H, 'Y'
	DB	00H, 'S', 00H, 'T', 00H, 'E', 00H, 'M', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@IBECJAAI@?$AAS?$AAE?$AAC?$AAU?$AAR?$AAI?$AAT?$AAY?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@IBECJAAI@?$AAS?$AAE?$AAC?$AAU?$AAR?$AAI?$AAT?$AAY?$AA?$AA@ DB 'S'
	DB	00H, 'E', 00H, 'C', 00H, 'U', 00H, 'R', 00H, 'I', 00H, 'T', 00H
	DB	'Y', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_17OMAOINJK@?$AAS?$AAA?$AAM?$AA?$AA@
CONST	SEGMENT
??_C@_17OMAOINJK@?$AAS?$AAA?$AAM?$AA?$AA@ DB 'S', 00H, 'A', 00H, 'M', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_19HLLLM@?$AAM?$AAi?$AAm?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_19HLLLM@?$AAM?$AAi?$AAm?$AAe?$AA?$AA@ DB 'M', 00H, 'i', 00H, 'm', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@MAICEHGI@?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@MAICEHGI@?$AAH?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?$AA@ DB 'H'
	DB	00H, 'a', 00H, 'r', 00H, 'd', 00H, 'w', 00H, 'a', 00H, 'r', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@EKPAFMCP@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@EKPAFMCP@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'f', 00H, 'a', 00H
	DB	'c', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@NKMMNMGL@?$AAF?$AAi?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@NKMMNMGL@?$AAF?$AAi?$AAl?$AAe?$AAT?$AAy?$AAp?$AAe?$AA?$AA@ DB 'F'
	DB	00H, 'i', 00H, 'l', 00H, 'e', 00H, 'T', 00H, 'y', 00H, 'p', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@OEKPKBNA@?$AAC?$AAo?$AAm?$AAp?$AAo?$AAn?$AAe?$AAn?$AAt?$AA?5?$AAC?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@OEKPKBNA@?$AAC?$AAo?$AAm?$AAp?$AAo?$AAn?$AAe?$AAn?$AAt?$AA?5?$AAC?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?$AA@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@KANJNLFF@?$AAC?$AAL?$AAS?$AAI?$AAD?$AA?$AA@
CONST	SEGMENT
??_C@_1M@KANJNLFF@?$AAC?$AAL?$AAS?$AAI?$AAD?$AA?$AA@ DB 'C', 00H, 'L', 00H
	DB	'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@EJNEECMJ@?$AAA?$AAp?$AAp?$AAI?$AAD?$AA?$AA@
CONST	SEGMENT
??_C@_1M@EJNEECMJ@?$AAA?$AAp?$AAp?$AAI?$AAD?$AA?$AA@ DB 'A', 00H, 'p', 00H
	DB	'p', 00H, 'I', 00H, 'D', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?MAX_TYPE@CRegParser@ATL@@1HB
CONST	SEGMENT
?MAX_TYPE@CRegParser@ATL@@1HB DD 01000H			; ATL::CRegParser::MAX_TYPE
CONST	ENDS
;	COMDAT ?MAX_VALUE@CRegParser@ATL@@1HB
CONST	SEGMENT
?MAX_VALUE@CRegParser@ATL@@1HB DD 01000H		; ATL::CRegParser::MAX_VALUE
CONST	ENDS
;	COMDAT ??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AA?$AA@ DB 'D', 00H, 'e', 00H
	DB	'l', 00H, 'e', 00H, 't', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@ DB 'N'
	DB	00H, 'o', 00H, 'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@ DB 'F'
	DB	00H, 'o', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H
	DB	'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl?$AA?$AA@ DB 'V', 00H, 'a', 00H, 'l', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_13OPKGLAFF@?$AAB?$AA?$AA@
CONST	SEGMENT
??_C@_13OPKGLAFF@?$AAB?$AA?$AA@ DB 'B', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13MKMNOPIJ@?$AAD?$AA?$AA@
CONST	SEGMENT
??_C@_13MKMNOPIJ@?$AAD?$AA?$AA@ DB 'D', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13LHMFKAAD@?$AAM?$AA?$AA@
CONST	SEGMENT
??_C@_13LHMFKAAD@?$AAM?$AA?$AA@ DB 'M', 00H, 00H, 00H	; `string'
CONST	ENDS
CONST	SEGMENT
_szStringVal DD	FLAT:??_C@_13HADIAKP@?$AAS?$AA?$AA@
_multiszStringVal DD FLAT:??_C@_13LHMFKAAD@?$AAM?$AA?$AA@
_szDwordVal DD	FLAT:??_C@_13MKMNOPIJ@?$AAD?$AA?$AA@
_szBinaryVal DD	FLAT:??_C@_13OPKGLAFF@?$AAB?$AA?$AA@
_szValToken DD	FLAT:??_C@_17LLMMEOJD@?$AAV?$AAa?$AAl?$AA?$AA@
_szForceRemove DD FLAT:??_C@_1BI@JFAIJMHL@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@
_szNoRemove DD	FLAT:??_C@_1BC@GCKHIPE@?$AAN?$AAo?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AA?$AA@
_szDelete DD	FLAT:??_C@_1O@JDLOHAN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AA?$AA@
CONST	ENDS
;	COMDAT ??_C@_13HADIAKP@?$AAS?$AA?$AA@
CONST	SEGMENT
??_C@_13HADIAKP@?$AAS?$AA?$AA@ DB 'S', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ___pobjMapEntryLast
ATL$__z	SEGMENT
___pobjMapEntryLast DD 00H
ATL$__z	ENDS
;	COMDAT ___pobjMapEntryFirst
ATL$__a	SEGMENT
___pobjMapEntryFirst DD 00H
ATL$__a	ENDS
;	COMDAT _IID_IAxWinAmbientDispatchEx
CONST	SEGMENT
_IID_IAxWinAmbientDispatchEx DD 0b2d0778bH
	DW	0ac99H
	DW	04c58H
	DB	0a5H
	DB	0c8H
	DB	0e7H
	DB	072H
	DB	04eH
	DB	053H
	DB	016H
	DB	0b5H
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindowLic
CONST	SEGMENT
_IID_IAxWinHostWindowLic DD 03935bda8H
	DW	04ed9H
	DW	0495cH
	DB	086H
	DB	050H
	DB	0e0H
	DB	01fH
	DB	0c1H
	DB	0e3H
	DB	08aH
	DB	04bH
CONST	ENDS
;	COMDAT _IID_IDocHostUIHandlerDispatch
CONST	SEGMENT
_IID_IDocHostUIHandlerDispatch DD 0425b5af0H
	DW	065f1H
	DW	011d1H
	DB	096H
	DB	011H
	DB	00H
	DB	00H
	DB	0f8H
	DB	01eH
	DB	0dH
	DB	0dH
CONST	ENDS
;	COMDAT _IID_IInternalConnection
CONST	SEGMENT
_IID_IInternalConnection DD 072ad0770H
	DW	06a9fH
	DW	011d1H
	DB	0bcH
	DB	0ecH
	DB	00H
	DB	060H
	DB	08H
	DB	08fH
	DB	044H
	DB	04eH
CONST	ENDS
;	COMDAT _IID_IAxWinAmbientDispatch
CONST	SEGMENT
_IID_IAxWinAmbientDispatch DD 0b6ea2051H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IAxWinHostWindow
CONST	SEGMENT
_IID_IAxWinHostWindow DD 0b6ea2050H
	DW	048aH
	DW	011d1H
	DB	082H
	DB	0b9H
	DB	00H
	DB	0c0H
	DB	04fH
	DB	0b9H
	DB	094H
	DB	02eH
CONST	ENDS
;	COMDAT _IID_IRegistrar
CONST	SEGMENT
_IID_IRegistrar DD 044ec053bH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _CLSID_Registrar
CONST	SEGMENT
_CLSID_Registrar DD 044ec053aH
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT _LIBID_ATLLib
CONST	SEGMENT
_LIBID_ATLLib DD 044ec0535H
	DW	0400fH
	DW	011d0H
	DB	09dH
	DB	0cdH
	DB	00H
	DB	0a0H
	DB	0c9H
	DB	03H
	DB	091H
	DB	0d3H
CONST	ENDS
;	COMDAT __pIncludeInitManaged
_DATA	SEGMENT
__pIncludeInitManaged DD FLAT:?_AfxInitManaged@@YAHXZ
_DATA	ENDS
;	COMDAT ?szInvalidDateTimeSpan@ATL@@3QB_WB
CONST	SEGMENT
?szInvalidDateTimeSpan@ATL@@3QB_WB DD FLAT:??_C@_1CK@NMKILLLB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAS?$AAp?$AAa?$AAn?$AA?$AA@ ; ATL::szInvalidDateTimeSpan
CONST	ENDS
;	COMDAT ??_C@_1CK@NMKILLLB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAS?$AAp?$AAa?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@NMKILLLB@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AAS?$AAp?$AAa?$AAn?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, 'S', 00H, 'p', 00H, 'a', 00H, 'n', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ?szInvalidDateTime@ATL@@3QB_WB
CONST	SEGMENT
?szInvalidDateTime@ATL@@3QB_WB DD FLAT:??_C@_1CC@FFBCNGIJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@ ; ATL::szInvalidDateTime
CONST	ENDS
;	COMDAT ??_C@_1CC@FFBCNGIJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@FFBCNGIJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAa?$AAt?$AAe?$AAT?$AAi?$AAm?$AAe?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?Week@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Week@CFileTime@ATL@@2_KB DQ 0000058028e44000H		; ATL::CFileTime::Week
CONST	ENDS
;	COMDAT ?Day@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Day@CFileTime@ATL@@2_KB DQ 000000c92a69c000H		; ATL::CFileTime::Day
CONST	ENDS
;	COMDAT ?Hour@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Hour@CFileTime@ATL@@2_KB DQ 0000000861c46800H		; ATL::CFileTime::Hour
CONST	ENDS
;	COMDAT ?Minute@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Minute@CFileTime@ATL@@2_KB DQ 0000000023c34600H	; ATL::CFileTime::Minute
CONST	ENDS
;	COMDAT ?Second@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Second@CFileTime@ATL@@2_KB DQ 0000000000989680H	; ATL::CFileTime::Second
CONST	ENDS
;	COMDAT ?Millisecond@CFileTime@ATL@@2_KB
CONST	SEGMENT
?Millisecond@CFileTime@ATL@@2_KB DQ 0000000000002710H	; ATL::CFileTime::Millisecond
CONST	ENDS
;	COMDAT ?generic@CFileException@@2HB
CONST	SEGMENT
?generic@CFileException@@2HB DD 01H			; CFileException::generic
CONST	ENDS
;	COMDAT ?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@_CSTRING_IMPL_@ATL@@2_NB
CONST	SEGMENT
?c_bIsMFCDLLTraits@?$_MFCDLLTraitsCheck@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@_CSTRING_IMPL_@ATL@@2_NB DB 00H ; ATL::_CSTRING_IMPL_::_MFCDLLTraitsCheck<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::c_bIsMFCDLLTraits
CONST	ENDS
;	COMDAT ?generic@CArchiveException@@2HB
CONST	SEGMENT
?generic@CArchiveException@@2HB DD 01H			; CArchiveException::generic
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ DD 08H ; ATL::CVarTypeInfo<tagCY *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB DW 04006H	; ATL::CVarTypeInfo<tagCY *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ DD 08H ; ATL::CVarTypeInfo<tagCY>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB DW 06H		; ATL::CVarTypeInfo<tagCY>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ DD 08H ; ATL::CVarTypeInfo<IDispatch * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB DW 04009H	; ATL::CVarTypeInfo<IDispatch * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ DD 08H ; ATL::CVarTypeInfo<IDispatch *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB DW 09H	; ATL::CVarTypeInfo<IDispatch *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ DD 08H ; ATL::CVarTypeInfo<IUnknown * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB DW 0400dH	; ATL::CVarTypeInfo<IUnknown * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ DD 08H ; ATL::CVarTypeInfo<IUnknown *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB DW 0dH	; ATL::CVarTypeInfo<IUnknown *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@ DD 08H ; ATL::CVarTypeInfo<wchar_t * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB DW 04008H		; ATL::CVarTypeInfo<wchar_t * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@ DD 08H ; ATL::CVarTypeInfo<wchar_t *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_W@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_W@ATL@@2GB DW 08H			; ATL::CVarTypeInfo<wchar_t *>::VT
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUtagVARIANT@@@ATL@@2GB DW 0400cH	; ATL::CVarTypeInfo<tagVARIANT *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ DD 08H ; ATL::CVarTypeInfo<double *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAN@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAN@ATL@@2GB DW 04005H		; ATL::CVarTypeInfo<double *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ DD 08H ; ATL::CVarTypeInfo<double>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@N@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@N@ATL@@2GB DW 05H			; ATL::CVarTypeInfo<double>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ DD 08H ; ATL::CVarTypeInfo<float *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAM@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAM@ATL@@2GB DW 04004H		; ATL::CVarTypeInfo<float *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ DD 08H ; ATL::CVarTypeInfo<float>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@M@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@M@ATL@@2GB DW 04H			; ATL::CVarTypeInfo<float>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned __int64 *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_K@ATL@@2GB DW 04015H		; ATL::CVarTypeInfo<unsigned __int64 *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned __int64>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@_K@ATL@@2GB DW 015H			; ATL::CVarTypeInfo<unsigned __int64>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ DD 08H ; ATL::CVarTypeInfo<__int64 *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_J@ATL@@2GB DW 04014H		; ATL::CVarTypeInfo<__int64 *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ DD 08H ; ATL::CVarTypeInfo<__int64>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@_J@ATL@@2GB DW 014H			; ATL::CVarTypeInfo<__int64>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned long *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAK@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAK@ATL@@2GB DW 04013H		; ATL::CVarTypeInfo<unsigned long *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@K@ATL@@2GB DW 013H			; ATL::CVarTypeInfo<unsigned long>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ DD 08H ; ATL::CVarTypeInfo<long *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAJ@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAJ@ATL@@2GB DW 04003H		; ATL::CVarTypeInfo<long *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ DD 08H ; ATL::CVarTypeInfo<long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@J@ATL@@2GB DW 03H			; ATL::CVarTypeInfo<long>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAI@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAI@ATL@@2GB DW 04013H		; ATL::CVarTypeInfo<unsigned int *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned int>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@I@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@I@ATL@@2GB DW 013H			; ATL::CVarTypeInfo<unsigned int>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ DD 08H ; ATL::CVarTypeInfo<int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAH@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAH@ATL@@2GB DW 04003H		; ATL::CVarTypeInfo<int *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ DD 08H ; ATL::CVarTypeInfo<int>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@H@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@H@ATL@@2GB DW 03H			; ATL::CVarTypeInfo<int>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned short *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAG@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAG@ATL@@2GB DW 04012H		; ATL::CVarTypeInfo<unsigned short *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@G@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@G@ATL@@2GB DW 012H			; ATL::CVarTypeInfo<unsigned short>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ DD 08H ; ATL::CVarTypeInfo<short *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAF@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAF@ATL@@2GB DW 04002H		; ATL::CVarTypeInfo<short *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ DD 08H ; ATL::CVarTypeInfo<short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@F@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@F@ATL@@2GB DW 02H			; ATL::CVarTypeInfo<short>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAE@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAE@ATL@@2GB DW 04011H		; ATL::CVarTypeInfo<unsigned char *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ DD 08H ; ATL::CVarTypeInfo<char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAD@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAD@ATL@@2GB DW 04010H		; ATL::CVarTypeInfo<char *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned char>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@E@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@E@ATL@@2GB DW 011H			; ATL::CVarTypeInfo<unsigned char>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ DD 08H ; ATL::CVarTypeInfo<char>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@D@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@D@ATL@@2GB DW 010H			; ATL::CVarTypeInfo<char>::VT
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@_K@ATL@@2_KB
CONST	SEGMENT
?_Max@?$AtlLimits@_K@ATL@@2_KB DQ ffffffffffffffffH	; ATL::AtlLimits<unsigned __int64>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@_K@ATL@@2_KB
CONST	SEGMENT
?_Min@?$AtlLimits@_K@ATL@@2_KB DQ 0000000000000000H	; ATL::AtlLimits<unsigned __int64>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@_J@ATL@@2_JB
CONST	SEGMENT
?_Max@?$AtlLimits@_J@ATL@@2_JB DQ 7fffffffffffffffH	; ATL::AtlLimits<__int64>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@_J@ATL@@2_JB
CONST	SEGMENT
?_Min@?$AtlLimits@_J@ATL@@2_JB DQ 8000000000000000H	; ATL::AtlLimits<__int64>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@K@ATL@@2KB
CONST	SEGMENT
?_Max@?$AtlLimits@K@ATL@@2KB DD 0ffffffffH		; ATL::AtlLimits<unsigned long>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@K@ATL@@2KB
CONST	SEGMENT
?_Min@?$AtlLimits@K@ATL@@2KB DD 00H			; ATL::AtlLimits<unsigned long>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@J@ATL@@2JB
CONST	SEGMENT
?_Max@?$AtlLimits@J@ATL@@2JB DD 07fffffffH		; ATL::AtlLimits<long>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@J@ATL@@2JB
CONST	SEGMENT
?_Min@?$AtlLimits@J@ATL@@2JB DD 080000000H		; ATL::AtlLimits<long>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@I@ATL@@2IB
CONST	SEGMENT
?_Max@?$AtlLimits@I@ATL@@2IB DD 0ffffffffH		; ATL::AtlLimits<unsigned int>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@I@ATL@@2IB
CONST	SEGMENT
?_Min@?$AtlLimits@I@ATL@@2IB DD 00H			; ATL::AtlLimits<unsigned int>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@H@ATL@@2HB
CONST	SEGMENT
?_Max@?$AtlLimits@H@ATL@@2HB DD 07fffffffH		; ATL::AtlLimits<int>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@H@ATL@@2HB
CONST	SEGMENT
?_Min@?$AtlLimits@H@ATL@@2HB DD 080000000H		; ATL::AtlLimits<int>::_Min
CONST	ENDS
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\afx.inl
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?_AfxInitManaged@@YAHXZ
_TEXT	SEGMENT
?_AfxInitManaged@@YAHXZ PROC				; _AfxInitManaged, COMDAT

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 77   : 	return 0;

  0001e	33 c0		 xor	 eax, eax

; 78   : }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?_AfxInitManaged@@YAHXZ ENDP				; _AfxInitManaged
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
$LN2@vector:
  0001e	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  00021	83 e8 01	 sub	 eax, 1
  00024	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00027	78 1a		 js	 SHORT $LN3@vector
  00029	8b f4		 mov	 esi, esp
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  0002e	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  0003b	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  0003e	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00041	eb db		 jmp	 SHORT $LN2@vector
$LN3@vector:
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\atldef.h
_TEXT	ENDS
;	COMDAT ??__Eclash@Inconsistent_definition_of_symbol__ATL_MIXED@@YAXXZ
text$yc	SEGMENT
$T215584 = -197						; size = 1
??__Eclash@Inconsistent_definition_of_symbol__ATL_MIXED@@YAXXZ PROC ; Inconsistent_definition_of_symbol__ATL_MIXED::`dynamic initializer for 'clash'', COMDAT

; 65   : 	__declspec(selectany) _Please_define_it_the_same_throughout_your_project clash = _Please_define_it_the_same_throughout_your_project ();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	33 c0		 xor	 eax, eax
  00020	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T215584[ebp], al
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??__Eclash@Inconsistent_definition_of_symbol__ATL_MIXED@@YAXXZ ENDP ; Inconsistent_definition_of_symbol__ATL_MIXED::`dynamic initializer for 'clash''
text$yc	ENDS
PUBLIC	??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ ; Define_the_symbol__ATL_MIXED::Thank_you::Thank_you
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Eclash@Define_the_symbol__ATL_MIXED@@YAXXZ
text$yc	SEGMENT
??__Eclash@Define_the_symbol__ATL_MIXED@@YAXXZ PROC	; Define_the_symbol__ATL_MIXED::`dynamic initializer for 'clash'', COMDAT

; 81   : 	__declspec(selectany) Thank_you clash = Thank_you();

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?clash@Define_the_symbol__ATL_MIXED@@3UThank_you@1@A ; Define_the_symbol__ATL_MIXED::clash
  00023	e8 00 00 00 00	 call	 ??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__Eclash@Define_the_symbol__ATL_MIXED@@YAXXZ ENDP	; Define_the_symbol__ATL_MIXED::`dynamic initializer for 'clash''
text$yc	ENDS
PUBLIC	??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@	; Define_the_symbol__ATL_MIXED::Thank_you::`vftable'
PUBLIC	??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@ ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8 ; Define_the_symbol__ATL_MIXED::Thank_you `RTTI Type Descriptor'
PUBLIC	??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8 ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ ; Define_the_symbol__ATL_MIXED::Thank_you::one
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8 DD FLAT:??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8 ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	ENDS
;	COMDAT ??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	SEGMENT
??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8 DD FLAT:??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8 ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	SEGMENT
??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8 DD 00H	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8
_DATA	SEGMENT
??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8 DD FLAT:??_7type_info@@6B@ ; Define_the_symbol__ATL_MIXED::Thank_you `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUThank_you@Define_the_symbol__ATL_MIXED@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@
rdata$r	SEGMENT
??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@ DD 00H	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8
	DD	FLAT:??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	ENDS
;	COMDAT ??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@
CONST	SEGMENT
??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@ DD FLAT:??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@ ; Define_the_symbol__ATL_MIXED::Thank_you::`vftable'
	DD	FLAT:?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ PROC	; Define_the_symbol__ATL_MIXED::Thank_you::Thank_you, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ ENDP	; Define_the_symbol__ATL_MIXED::Thank_you::Thank_you
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ PROC ; Define_the_symbol__ATL_MIXED::Thank_you::one, COMDAT
; _this$ = ecx

; 79   : 	struct Thank_you { virtual void one(){} };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ ENDP ; Define_the_symbol__ATL_MIXED::Thank_you::one
_TEXT	ENDS
PUBLIC	??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
PUBLIC	??_C@_15IALCAGAM@?$AA?$DL?$AA?5?$AA?$AA@	; `string'
EXTRN	_atexit:PROC
;	COMDAT ??_C@_15IALCAGAM@?$AA?$DL?$AA?5?$AA?$AA@
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\afxkeyboardmanager.h
CONST	SEGMENT
??_C@_15IALCAGAM@?$AA?$DL?$AA?5?$AA?$AA@ DB ';', 00H, ' ', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??__E_afxDefaultAcceleratorDelimiter@@YAXXZ
text$yc	SEGMENT
??__E_afxDefaultAcceleratorDelimiter@@YAXXZ PROC	; `dynamic initializer for '_afxDefaultAcceleratorDelimiter'', COMDAT

; 23   : static CString _afxDefaultAcceleratorDelimiter = _T("; ");

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_15IALCAGAM@?$AA?$DL?$AA?5?$AA?$AA@
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET __afxDefaultAcceleratorDelimiter
  00028	e8 00 00 00 00	 call	 ??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
  0002d	68 00 00 00 00	 push	 OFFSET ??__F_afxDefaultAcceleratorDelimiter@@YAXXZ ; `dynamic atexit destructor for '_afxDefaultAcceleratorDelimiter''
  00032	e8 00 00 00 00	 call	 _atexit
  00037	83 c4 04	 add	 esp, 4
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??__E_afxDefaultAcceleratorDelimiter@@YAXXZ ENDP	; `dynamic initializer for '_afxDefaultAcceleratorDelimiter''
text$yc	ENDS
PUBLIC	??1?$CSimpleStringT@_W$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<wchar_t,0>::~CSimpleStringT<wchar_t,0>
PUBLIC	??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=
PUBLIC	?CheckImplicitLoad@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CheckImplicitLoad
PUBLIC	??0?$CSimpleStringT@_W$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<wchar_t,0>::CSimpleStringT<wchar_t,0>
PUBLIC	?GetDefaultManager@?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> >::GetDefaultManager
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
xdata$x	SEGMENT
__unwindtable$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z$0
__ehfuncinfo$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pszSrc$ = 8						; size = 4
??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >, COMDAT
; _this$ = ecx

; 963  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	e8 00 00 00 00	 call	 ?GetDefaultManager@?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ; StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> >::GetDefaultManager
  00047	50		 push	 eax
  00048	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ??0?$CSimpleStringT@_W$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<wchar_t,0>::CSimpleStringT<wchar_t,0>
  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 964  : 		if( !CheckImplicitLoad( pszSrc ) )

  00057	8b 45 08	 mov	 eax, DWORD PTR _pszSrc$[ebp]
  0005a	50		 push	 eax
  0005b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?CheckImplicitLoad@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CheckImplicitLoad
  00063	0f b6 c8	 movzx	 ecx, al
  00066	85 c9		 test	 ecx, ecx
  00068	75 0c		 jne	 SHORT $LN2@CStringT

; 965  : 		{
; 966  : 			*this = pszSrc;

  0006a	8b 45 08	 mov	 eax, DWORD PTR _pszSrc$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PB_W@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=
$LN2@CStringT:

; 967  : 		}
; 968  : 	}

  00076	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00080	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008a	59		 pop	 ecx
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CSimpleStringT@_W$0A@@ATL@@QAE@XZ ; ATL::CSimpleStringT<wchar_t,0>::~CSimpleStringT<wchar_t,0>
__ehhandler$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@PB_W@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
PUBLIC	??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@PB_W@Z	; ATL::CSimpleStringT<wchar_t,0>::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PB_W@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=, COMDAT
; _this$ = ecx

; 1232 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1233 : 		CThisSimpleString::operator=( pszSrc );

  00023	8b 45 08	 mov	 eax, DWORD PTR _pszSrc$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@PB_W@Z ; ATL::CSimpleStringT<wchar_t,0>::operator=

; 1234 : 
; 1235 : 		return( *this );

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 1236 : 	}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEAAV01@PB_W@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::operator=
_TEXT	ENDS
PUBLIC	??RCTraceFileAndLineInfo@ATL@@QBAXKIPB_WZZ	; ATL::CTraceFileAndLineInfo::operator()
PUBLIC	??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z	; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
PUBLIC	??_C@_0EL@DOLMBPMI@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	??BCTraceCategory@ATL@@QBEKXZ			; ATL::CTraceCategory::operator unsigned long
PUBLIC	??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$CI?$AA?$CF?$AAu?$AA?$CJ@ ; `string'
PUBLIC	?LoadStringW@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::LoadStringW
EXTRN	?atlTraceString@ATL@@3VCTraceCategory@1@A:DWORD	; ATL::atlTraceString
;	COMDAT ??_C@_0EL@DOLMBPMI@c?3?2program?5files?2microsoft?5visua@
CONST	SEGMENT
??_C@_0EL@DOLMBPMI@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio 10.0\vc\atlmfc\include\cstringt'
	DB	'.h', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$CI?$AA?$CF?$AAu?$AA?$CJ@
CONST	SEGMENT
??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$CI?$AA?$CF?$AAu?$AA?$CJ@ DB 'W'
	DB	00H, 'a', 00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	':', 00H, ' ', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'i'
	DB	00H, 'c', 00H, 'i', 00H, 't', 00H, ' ', 00H, 'L', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, '(', 00H, '%', 00H, 'u', 00H, ')', 00H, ' ', 00H
	DB	'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 0aH
	DB	00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT
$T215612 = -240						; size = 8
_nID$196827 = -32					; size = 4
_bRet$ = -17						; size = 1
_this$ = -8						; size = 4
_pv$ = 8						; size = 4
?CheckImplicitLoad@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAE_NPBX@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CheckImplicitLoad, COMDAT
; _this$ = ecx

; 2574 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00013	b9 3d 00 00 00	 mov	 ecx, 61			; 0000003dH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2575 : 		bool bRet = false;

  00023	c6 45 ef 00	 mov	 BYTE PTR _bRet$[ebp], 0

; 2576 : 
; 2577 : 		if( (pv != NULL) && IS_INTRESOURCE( pv ) )

  00027	83 7d 08 00	 cmp	 DWORD PTR _pv$[ebp], 0
  0002b	74 60		 je	 SHORT $LN2@CheckImpli
  0002d	8b 45 08	 mov	 eax, DWORD PTR _pv$[ebp]
  00030	c1 e8 10	 shr	 eax, 16			; 00000010H
  00033	85 c0		 test	 eax, eax
  00035	75 56		 jne	 SHORT $LN2@CheckImpli

; 2578 : 		{
; 2579 : 			UINT nID = LOWORD( reinterpret_cast< DWORD_PTR >( pv ) );

  00037	8b 45 08	 mov	 eax, DWORD PTR _pv$[ebp]
  0003a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0003f	0f b7 c8	 movzx	 ecx, ax
  00042	89 4d e0	 mov	 DWORD PTR _nID$196827[ebp], ecx

; 2580 : 			if( !LoadString( nID ) )

  00045	8b 45 e0	 mov	 eax, DWORD PTR _nID$196827[ebp]
  00048	50		 push	 eax
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?LoadStringW@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::LoadStringW
  00051	85 c0		 test	 eax, eax
  00053	75 34		 jne	 SHORT $LN1@CheckImpli

; 2581 : 			{
; 2582 : 				ATLTRACE( atlTraceString, 2, _T( "Warning: implicit LoadString(%u) failed\n" ), nID );

  00055	8b 45 e0	 mov	 eax, DWORD PTR _nID$196827[ebp]
  00058	50		 push	 eax
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_1FC@BMOLDHIO@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAi?$AAm?$AAp?$AAl?$AAi?$AAc?$AAi?$AAt?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$CI?$AA?$CF?$AAu?$AA?$CJ@
  0005e	6a 02		 push	 2
  00060	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceString@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceString
  00065	e8 00 00 00 00	 call	 ??BCTraceCategory@ATL@@QBEKXZ ; ATL::CTraceCategory::operator unsigned long
  0006a	50		 push	 eax
  0006b	68 16 0a 00 00	 push	 2582			; 00000a16H
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@DOLMBPMI@c?3?2program?5files?2microsoft?5visua@
  00075	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR $T215612[ebp]
  0007b	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXKIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00086	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@CheckImpli:

; 2583 : 			}
; 2584 : 			bRet = true;

  00089	c6 45 ef 01	 mov	 BYTE PTR _bRet$[ebp], 1
$LN2@CheckImpli:

; 2585 : 		}
; 2586 : 
; 2587 : 		return( bRet );

  0008d	8a 45 ef	 mov	 al, BYTE PTR _bRet$[ebp]

; 2588 : 	}

  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx
  00093	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  00099	3b ec		 cmp	 ebp, esp
  0009b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
?CheckImplicitLoad@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@AAE_NPBX@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::CheckImplicitLoad
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\atltrace.h
_TEXT	ENDS
;	COMDAT ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszFileName$ = 8					; size = 4
_nLineNo$ = 12						; size = 4
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z PROC		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo, COMDAT
; _this$ = ecx

; 224  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _pszFileName$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 4d 0c	 mov	 ecx, DWORD PTR _nLineNo$[ebp]
  00031	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 225  : 	}

  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ENDP		; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
_TEXT	ENDS
PUBLIC	?TraceV@CTrace@ATL@@QBAXPBDHKIPB_WPAD@Z		; ATL::CTrace::TraceV
EXTRN	?s_trace@CTrace@ATL@@2V12@A:QWORD		; ATL::CTrace::s_trace
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??RCTraceFileAndLineInfo@ATL@@QBAXKIPB_WZZ
_TEXT	SEGMENT
_ptr$ = -8						; size = 4
_this$ = 8						; size = 4
_dwCategory$ = 12					; size = 4
_nLevel$ = 16						; size = 4
_pszFmt$ = 20						; size = 4
??RCTraceFileAndLineInfo@ATL@@QBAXKIPB_WZZ PROC		; ATL::CTraceFileAndLineInfo::operator(), COMDAT

; 248  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 249  : 		va_list ptr; va_start(ptr, pszFmt);

  0001e	8d 45 18	 lea	 eax, DWORD PTR _pszFmt$[ebp+4]
  00021	89 45 f8	 mov	 DWORD PTR _ptr$[ebp], eax

; 250  : 		ATL::CTrace::s_trace.TraceV(m_pszFileName, m_nLineNo, dwCategory, nLevel, pszFmt, ptr);

  00024	8b 45 f8	 mov	 eax, DWORD PTR _ptr$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 14	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  0002b	51		 push	 ecx
  0002c	8b 55 10	 mov	 edx, DWORD PTR _nLevel$[ebp]
  0002f	52		 push	 edx
  00030	8b 45 0c	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  00033	50		 push	 eax
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0003a	52		 push	 edx
  0003b	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00040	51		 push	 ecx
  00041	68 00 00 00 00	 push	 OFFSET ?s_trace@CTrace@ATL@@2V12@A ; ATL::CTrace::s_trace
  00046	e8 00 00 00 00	 call	 ?TraceV@CTrace@ATL@@QBAXPBDHKIPB_WPAD@Z ; ATL::CTrace::TraceV
  0004b	83 c4 1c	 add	 esp, 28			; 0000001cH

; 251  : 		va_end(ptr);

  0004e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ptr$[ebp], 0

; 252  : 	}

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
??RCTraceFileAndLineInfo@ATL@@QBAXKIPB_WZZ ENDP		; ATL::CTraceFileAndLineInfo::operator()
_TEXT	ENDS
EXTRN	_AtlTraceVU:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TraceV@CTrace@ATL@@QBAXPBDHKIPB_WPAD@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pszFileName$ = 12					; size = 4
_nLine$ = 16						; size = 4
_dwCategory$ = 20					; size = 4
_nLevel$ = 24						; size = 4
_pszFmt$ = 28						; size = 4
_args$ = 32						; size = 4
?TraceV@CTrace@ATL@@QBAXPBDHKIPB_WPAD@Z PROC		; ATL::CTrace::TraceV, COMDAT

; 211  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 212  : 	AtlTraceVU(m_dwModule, pszFileName, nLine, dwCategory, nLevel, pszFmt, args);

  0001e	8b 45 20	 mov	 eax, DWORD PTR _args$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 1c	 mov	 ecx, DWORD PTR _pszFmt$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 18	 mov	 edx, DWORD PTR _nLevel$[ebp]
  00029	52		 push	 edx
  0002a	8b 45 14	 mov	 eax, DWORD PTR _dwCategory$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d 10	 mov	 ecx, DWORD PTR _nLine$[ebp]
  00031	51		 push	 ecx
  00032	8b 55 0c	 mov	 edx, DWORD PTR _pszFileName$[ebp]
  00035	52		 push	 edx
  00036	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 _AtlTraceVU
  00042	83 c4 1c	 add	 esp, 28			; 0000001cH

; 213  : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
?TraceV@CTrace@ATL@@QBAXPBDHKIPB_WPAD@Z ENDP		; ATL::CTrace::TraceV
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??BCTraceCategory@ATL@@QBEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??BCTraceCategory@ATL@@QBEKXZ PROC			; ATL::CTraceCategory::operator unsigned long, COMDAT
; _this$ = ecx

; 301  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 302  : 	return( m_dwCategory );

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]

; 303  : }

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
??BCTraceCategory@ATL@@QBEKXZ ENDP			; ATL::CTraceCategory::operator unsigned long
_TEXT	ENDS
PUBLIC	?LoadStringW@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::LoadStringW
PUBLIC	?FindStringResourceInstance@?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> >::FindStringResourceInstance
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
;	COMDAT ?LoadStringW@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT
_hInst$ = -20						; size = 4
_this$ = -8						; size = 4
_nID$ = 8						; size = 4
?LoadStringW@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHI@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::LoadStringW, COMDAT
; _this$ = ecx

; 2240 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2241 : 		HINSTANCE hInst = StringTraits::FindStringResourceInstance( nID );

  00023	8b 45 08	 mov	 eax, DWORD PTR _nID$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?FindStringResourceInstance@?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> >::FindStringResourceInstance
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 45 ec	 mov	 DWORD PTR _hInst$[ebp], eax

; 2242 : 		if( hInst == NULL )

  00032	83 7d ec 00	 cmp	 DWORD PTR _hInst$[ebp], 0
  00036	75 04		 jne	 SHORT $LN1@LoadString

; 2243 : 		{
; 2244 : 			return( FALSE );

  00038	33 c0		 xor	 eax, eax
  0003a	eb 10		 jmp	 SHORT $LN2@LoadString
$LN1@LoadString:

; 2245 : 		}
; 2246 : 
; 2247 : 		return( LoadString( hInst, nID ) );

  0003c	8b 45 08	 mov	 eax, DWORD PTR _nID$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d ec	 mov	 ecx, DWORD PTR _hInst$[ebp]
  00043	51		 push	 ecx
  00044	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ?LoadStringW@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::LoadStringW
$LN2@LoadString:

; 2248 : 	}

  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?LoadStringW@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHI@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::LoadStringW
_TEXT	ENDS
PUBLIC	?ReleaseBufferSetLength@?$CSimpleStringT@_W$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::ReleaseBufferSetLength
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@_W@ATL@@SAXPA_WHPB_WH@Z ; ATL::ChTraitsCRT<wchar_t>::ConvertToBaseType
PUBLIC	?GetBuffer@?$CSimpleStringT@_W$0A@@ATL@@QAEPA_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::GetBuffer
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPB_WH@Z ; ATL::ChTraitsCRT<wchar_t>::GetBaseTypeLength
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LoadStringW@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_pszBuffer$ = -44					; size = 4
_nLength$ = -32						; size = 4
_pImage$ = -20						; size = 4
_this$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_nID$ = 12						; size = 4
?LoadStringW@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::LoadStringW, COMDAT
; _this$ = ecx

; 2254 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2255 : 		const ATLSTRINGRESOURCEIMAGE* pImage = AtlGetStringResourceImage( hInstance, nID );

  00023	8b 45 0c	 mov	 eax, DWORD PTR _nID$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _hInstance$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
  00030	83 c4 08	 add	 esp, 8
  00033	89 45 ec	 mov	 DWORD PTR _pImage$[ebp], eax

; 2256 : 		if( pImage == NULL )

  00036	83 7d ec 00	 cmp	 DWORD PTR _pImage$[ebp], 0
  0003a	75 04		 jne	 SHORT $LN1@LoadString@2

; 2257 : 		{
; 2258 : 			return( FALSE );

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 57		 jmp	 SHORT $LN2@LoadString@2
$LN1@LoadString@2:

; 2259 : 		}
; 2260 : 
; 2261 : 		int nLength = StringTraits::GetBaseTypeLength( pImage->achString, pImage->nLength );

  00040	8b 45 ec	 mov	 eax, DWORD PTR _pImage$[ebp]
  00043	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00046	51		 push	 ecx
  00047	8b 55 ec	 mov	 edx, DWORD PTR _pImage$[ebp]
  0004a	83 c2 02	 add	 edx, 2
  0004d	52		 push	 edx
  0004e	e8 00 00 00 00	 call	 ?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPB_WH@Z ; ATL::ChTraitsCRT<wchar_t>::GetBaseTypeLength
  00053	83 c4 08	 add	 esp, 8
  00056	89 45 e0	 mov	 DWORD PTR _nLength$[ebp], eax

; 2262 : 		PXSTR pszBuffer = GetBuffer( nLength );

  00059	8b 45 e0	 mov	 eax, DWORD PTR _nLength$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?GetBuffer@?$CSimpleStringT@_W$0A@@ATL@@QAEPA_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::GetBuffer
  00065	89 45 d4	 mov	 DWORD PTR _pszBuffer$[ebp], eax

; 2263 : 		StringTraits::ConvertToBaseType( pszBuffer, nLength, pImage->achString, pImage->nLength );

  00068	8b 45 ec	 mov	 eax, DWORD PTR _pImage$[ebp]
  0006b	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0006e	51		 push	 ecx
  0006f	8b 55 ec	 mov	 edx, DWORD PTR _pImage$[ebp]
  00072	83 c2 02	 add	 edx, 2
  00075	52		 push	 edx
  00076	8b 45 e0	 mov	 eax, DWORD PTR _nLength$[ebp]
  00079	50		 push	 eax
  0007a	8b 4d d4	 mov	 ecx, DWORD PTR _pszBuffer$[ebp]
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?ConvertToBaseType@?$ChTraitsCRT@_W@ATL@@SAXPA_WHPB_WH@Z ; ATL::ChTraitsCRT<wchar_t>::ConvertToBaseType
  00083	83 c4 10	 add	 esp, 16			; 00000010H

; 2264 : 		ReleaseBufferSetLength( nLength );

  00086	8b 45 e0	 mov	 eax, DWORD PTR _nLength$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	e8 00 00 00 00	 call	 ?ReleaseBufferSetLength@?$CSimpleStringT@_W$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::ReleaseBufferSetLength

; 2265 : 
; 2266 : 		return( TRUE );

  00092	b8 01 00 00 00	 mov	 eax, 1
$LN2@LoadString@2:

; 2267 : 	}

  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  000a0	3b ec		 cmp	 ebp, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 08 00	 ret	 8
?LoadStringW@?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::LoadStringW
_TEXT	ENDS
PUBLIC	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
EXTRN	__imp__FindResourceW@12:PROC
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\atlcore.h
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hResource$ = -8					; size = 4
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z PROC ; ATL::AtlGetStringResourceImage, COMDAT

; 333  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 334  : 	HRSRC hResource;
; 335  : 	/*
; 336  : 		The and operation (& static_cast<WORD>(~0)) protects the expression from being greater
; 337  : 		than WORD - this would cause a runtime error when the application is compiled with /RTCc flag.
; 338  : 	*/
; 339  : 	hResource = ::FindResourceW(hInstance, MAKEINTRESOURCEW( (((id>>4)+1) & static_cast<WORD>(~0)) ), (LPWSTR) RT_STRING);

  0001e	8b f4		 mov	 esi, esp
  00020	6a 06		 push	 6
  00022	8b 45 0c	 mov	 eax, DWORD PTR _id$[ebp]
  00025	c1 e8 04	 shr	 eax, 4
  00028	83 c0 01	 add	 eax, 1
  0002b	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  00030	0f b7 c8	 movzx	 ecx, ax
  00033	51		 push	 ecx
  00034	8b 55 08	 mov	 edx, DWORD PTR _hInstance$[ebp]
  00037	52		 push	 edx
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceW@12
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	89 45 f8	 mov	 DWORD PTR _hResource$[ebp], eax

; 340  : 	if( hResource == NULL )

  00048	83 7d f8 00	 cmp	 DWORD PTR _hResource$[ebp], 0
  0004c	75 04		 jne	 SHORT $LN1@AtlGetStri

; 341  : 	{
; 342  : 		return( NULL );

  0004e	33 c0		 xor	 eax, eax
  00050	eb 14		 jmp	 SHORT $LN2@AtlGetStri
$LN1@AtlGetStri:

; 343  : 	}
; 344  : 
; 345  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

  00052	8b 45 0c	 mov	 eax, DWORD PTR _id$[ebp]
  00055	50		 push	 eax
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _hResource$[ebp]
  00059	51		 push	 ecx
  0005a	8b 55 08	 mov	 edx, DWORD PTR _hInstance$[ebp]
  0005d	52		 push	 edx
  0005e	e8 00 00 00 00	 call	 ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@AtlGetStri:

; 346  : }

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006f	3b ec		 cmp	 ebp, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
EXTRN	__imp__SizeofResource@8:PROC
EXTRN	__imp__LockResource@4:PROC
EXTRN	__imp__LoadResource@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT
_iIndex$ = -56						; size = 4
_hGlobal$ = -44						; size = 4
_nResourceSize$ = -32					; size = 4
_pImageEnd$ = -20					; size = 4
_pImage$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_hResource$ = 12					; size = 4
_id$ = 16						; size = 4
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z PROC ; ATL::_AtlGetStringResourceImage, COMDAT

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00012	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 291  : 	const ATLSTRINGRESOURCEIMAGE* pImage;
; 292  : 	const ATLSTRINGRESOURCEIMAGE* pImageEnd;
; 293  : 	ULONG nResourceSize;
; 294  : 	HGLOBAL hGlobal;
; 295  : 	UINT iIndex;
; 296  : 
; 297  : 	hGlobal = ::LoadResource( hInstance, hResource );

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 0c	 mov	 eax, DWORD PTR _hResource$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR _hInstance$[ebp]
  00027	51		 push	 ecx
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadResource@8
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	89 45 d4	 mov	 DWORD PTR _hGlobal$[ebp], eax

; 298  : 	if( hGlobal == NULL )

  00038	83 7d d4 00	 cmp	 DWORD PTR _hGlobal$[ebp], 0
  0003c	75 07		 jne	 SHORT $LN6@AtlGetStri@2

; 299  : 	{
; 300  : 		return( NULL );

  0003e	33 c0		 xor	 eax, eax
  00040	e9 92 00 00 00	 jmp	 $LN7@AtlGetStri@2
$LN6@AtlGetStri@2:

; 301  : 	}
; 302  : 
; 303  : 	pImage = (const ATLSTRINGRESOURCEIMAGE*)::LockResource( hGlobal );

  00045	8b f4		 mov	 esi, esp
  00047	8b 45 d4	 mov	 eax, DWORD PTR _hGlobal$[ebp]
  0004a	50		 push	 eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LockResource@4
  00051	3b f4		 cmp	 esi, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	89 45 f8	 mov	 DWORD PTR _pImage$[ebp], eax

; 304  : 	if( pImage == NULL )

  0005b	83 7d f8 00	 cmp	 DWORD PTR _pImage$[ebp], 0
  0005f	75 04		 jne	 SHORT $LN5@AtlGetStri@2

; 305  : 	{
; 306  : 		return( NULL );

  00061	33 c0		 xor	 eax, eax
  00063	eb 72		 jmp	 SHORT $LN7@AtlGetStri@2
$LN5@AtlGetStri@2:

; 307  : 	}
; 308  : 
; 309  : 	nResourceSize = ::SizeofResource( hInstance, hResource );

  00065	8b f4		 mov	 esi, esp
  00067	8b 45 0c	 mov	 eax, DWORD PTR _hResource$[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d 08	 mov	 ecx, DWORD PTR _hInstance$[ebp]
  0006e	51		 push	 ecx
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SizeofResource@8
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	89 45 e0	 mov	 DWORD PTR _nResourceSize$[ebp], eax

; 310  : 	pImageEnd = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+nResourceSize);

  0007f	8b 45 f8	 mov	 eax, DWORD PTR _pImage$[ebp]
  00082	03 45 e0	 add	 eax, DWORD PTR _nResourceSize$[ebp]
  00085	89 45 ec	 mov	 DWORD PTR _pImageEnd$[ebp], eax

; 311  : 	iIndex = id&0x000f;

  00088	8b 45 10	 mov	 eax, DWORD PTR _id$[ebp]
  0008b	83 e0 0f	 and	 eax, 15			; 0000000fH
  0008e	89 45 c8	 mov	 DWORD PTR _iIndex$[ebp], eax
$LN4@AtlGetStri@2:

; 312  : 
; 313  : 	while( (iIndex > 0) && (pImage < pImageEnd) )

  00091	83 7d c8 00	 cmp	 DWORD PTR _iIndex$[ebp], 0
  00095	76 23		 jbe	 SHORT $LN3@AtlGetStri@2
  00097	8b 45 f8	 mov	 eax, DWORD PTR _pImage$[ebp]
  0009a	3b 45 ec	 cmp	 eax, DWORD PTR _pImageEnd$[ebp]
  0009d	73 1b		 jae	 SHORT $LN3@AtlGetStri@2

; 314  : 	{
; 315  : 		pImage = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+(sizeof( ATLSTRINGRESOURCEIMAGE )+(pImage->nLength*sizeof( WCHAR ))));

  0009f	8b 45 f8	 mov	 eax, DWORD PTR _pImage$[ebp]
  000a2	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a5	8b 55 f8	 mov	 edx, DWORD PTR _pImage$[ebp]
  000a8	8d 44 4a 02	 lea	 eax, DWORD PTR [edx+ecx*2+2]
  000ac	89 45 f8	 mov	 DWORD PTR _pImage$[ebp], eax

; 316  : 		iIndex--;

  000af	8b 45 c8	 mov	 eax, DWORD PTR _iIndex$[ebp]
  000b2	83 e8 01	 sub	 eax, 1
  000b5	89 45 c8	 mov	 DWORD PTR _iIndex$[ebp], eax

; 317  : 	}

  000b8	eb d7		 jmp	 SHORT $LN4@AtlGetStri@2
$LN3@AtlGetStri@2:

; 318  : 	if( pImage >= pImageEnd )

  000ba	8b 45 f8	 mov	 eax, DWORD PTR _pImage$[ebp]
  000bd	3b 45 ec	 cmp	 eax, DWORD PTR _pImageEnd$[ebp]
  000c0	72 04		 jb	 SHORT $LN2@AtlGetStri@2

; 319  : 	{
; 320  : 		return( NULL );

  000c2	33 c0		 xor	 eax, eax
  000c4	eb 11		 jmp	 SHORT $LN7@AtlGetStri@2
$LN2@AtlGetStri@2:

; 321  : 	}
; 322  : 	if( pImage->nLength == 0 )

  000c6	8b 45 f8	 mov	 eax, DWORD PTR _pImage$[ebp]
  000c9	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000cc	85 c9		 test	 ecx, ecx
  000ce	75 04		 jne	 SHORT $LN1@AtlGetStri@2

; 323  : 	{
; 324  : 		return( NULL );

  000d0	33 c0		 xor	 eax, eax
  000d2	eb 03		 jmp	 SHORT $LN7@AtlGetStri@2
$LN1@AtlGetStri@2:

; 325  : 	}
; 326  : 
; 327  : 	return( pImage );

  000d4	8b 45 f8	 mov	 eax, DWORD PTR _pImage$[ebp]
$LN7@AtlGetStri@2:

; 328  : }

  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000e0	3b ec		 cmp	 ebp, esp
  000e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c3		 ret	 0
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ENDP ; ATL::_AtlGetStringResourceImage
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPB_WH@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPB_WH@Z PROC ; ATL::ChTraitsCRT<wchar_t>::GetBaseTypeLength, COMDAT

; 701  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 702  : 		(void)pszSrc;
; 703  : 		// Returns required buffer size in wchar_ts
; 704  : 		return nLength;

  0001e	8b 45 0c	 mov	 eax, DWORD PTR _nLength$[ebp]

; 705  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPB_WH@Z ENDP ; ATL::ChTraitsCRT<wchar_t>::GetBaseTypeLength
_TEXT	ENDS
PUBLIC	?wmemcpy_s@Checked@ATL@@YAXPA_WIPB_WI@Z		; ATL::Checked::wmemcpy_s
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPB_W@Z ; ATL::ChTraitsCRT<wchar_t>::GetBaseTypeLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@_W@ATL@@SAXPA_WHPB_WH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@_W@ATL@@SAXPA_WHPB_WH@Z PROC ; ATL::ChTraitsCRT<wchar_t>::ConvertToBaseType, COMDAT

; 722  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 723  : 		if (nSrcLength == -1) { nSrcLength=1 + GetBaseTypeLength(pszSrc); }

  0001e	83 7d 14 ff	 cmp	 DWORD PTR _nSrcLength$[ebp], -1
  00022	75 12		 jne	 SHORT $LN1@ConvertToB
  00024	8b 45 10	 mov	 eax, DWORD PTR _pszSrc$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPB_W@Z ; ATL::ChTraitsCRT<wchar_t>::GetBaseTypeLength
  0002d	83 c4 04	 add	 esp, 4
  00030	83 c0 01	 add	 eax, 1
  00033	89 45 14	 mov	 DWORD PTR _nSrcLength$[ebp], eax
$LN1@ConvertToB:

; 724  : 		// nLen is in wchar_ts
; 725  : 		Checked::wmemcpy_s(pszDest, nDestLength, pszSrc, nSrcLength);

  00036	8b 45 14	 mov	 eax, DWORD PTR _nSrcLength$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d 10	 mov	 ecx, DWORD PTR _pszSrc$[ebp]
  0003d	51		 push	 ecx
  0003e	8b 55 0c	 mov	 edx, DWORD PTR _nDestLength$[ebp]
  00041	52		 push	 edx
  00042	8b 45 08	 mov	 eax, DWORD PTR _pszDest$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?wmemcpy_s@Checked@ATL@@YAXPA_WIPB_WI@Z ; ATL::Checked::wmemcpy_s
  0004b	83 c4 10	 add	 esp, 16			; 00000010H

; 726  : 	}

  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00057	3b ec		 cmp	 ebp, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
?ConvertToBaseType@?$ChTraitsCRT@_W@ATL@@SAXPA_WHPB_WH@Z ENDP ; ATL::ChTraitsCRT<wchar_t>::ConvertToBaseType
_TEXT	ENDS
PUBLIC	?AfxCrtErrorCheck@@YAHH@Z			; AfxCrtErrorCheck
EXTRN	_wmemcpy_s:PROC
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\atlchecked.h
;	COMDAT ?wmemcpy_s@Checked@ATL@@YAXPA_WIPB_WI@Z
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__N1$ = 12						; size = 4
__S2$ = 16						; size = 4
__N$ = 20						; size = 4
?wmemcpy_s@Checked@ATL@@YAXPA_WIPB_WI@Z PROC		; ATL::Checked::wmemcpy_s, COMDAT

; 77   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 78   : 	ATLMFC_CRT_ERRORCHECK(::wmemcpy_s(_S1, _N1, _S2, _N));

  0001e	8b 45 14	 mov	 eax, DWORD PTR __N$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __S2$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 0c	 mov	 edx, DWORD PTR __N1$[ebp]
  00029	52		 push	 edx
  0002a	8b 45 08	 mov	 eax, DWORD PTR __S1$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 _wmemcpy_s
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?AfxCrtErrorCheck@@YAHH@Z ; AfxCrtErrorCheck
  0003c	83 c4 04	 add	 esp, 4

; 79   : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
?wmemcpy_s@Checked@ATL@@YAXPA_WIPB_WI@Z ENDP		; ATL::Checked::wmemcpy_s
_TEXT	ENDS
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	?AfxThrowMemoryException@@YGXXZ:PROC		; AfxThrowMemoryException
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\afx.h
;	COMDAT ?AfxCrtErrorCheck@@YAHH@Z
_TEXT	SEGMENT
tv64 = -196						; size = 4
_error$ = 8						; size = 4
?AfxCrtErrorCheck@@YAHH@Z PROC				; AfxCrtErrorCheck, COMDAT

; 470  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 471  : 	switch(error)

  0001e	8b 45 08	 mov	 eax, DWORD PTR _error$[ebp]
  00021	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv64[ebp], eax
  00027	83 bd 3c ff ff
	ff 50		 cmp	 DWORD PTR tv64[ebp], 80	; 00000050H
  0002e	77 24		 ja	 SHORT $LN1@AfxCrtErro
  00030	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv64[ebp]
  00036	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN9@AfxCrtErro[ecx]
  0003d	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN10@AfxCrtErro[edx*4]
$LN4@AfxCrtErro:

; 472  : 	{
; 473  : 	case ENOMEM:
; 474  : 		AfxThrowMemoryException();

  00044	e8 00 00 00 00	 call	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException

; 475  : 		break;

  00049	eb 0e		 jmp	 SHORT $LN5@AfxCrtErro
$LN3@AfxCrtErro:

; 476  : 	case EINVAL:
; 477  : 	case ERANGE:
; 478  : 		AfxThrowInvalidArgException();

  0004b	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException

; 479  : 		break;

  00050	eb 07		 jmp	 SHORT $LN5@AfxCrtErro
$LN2@AfxCrtErro:

; 480  : 	case STRUNCATE:
; 481  : 	case 0:
; 482  : 		break;

  00052	eb 05		 jmp	 SHORT $LN5@AfxCrtErro
$LN1@AfxCrtErro:

; 483  : 	default:
; 484  : 		AfxThrowInvalidArgException();

  00054	e8 00 00 00 00	 call	 ?AfxThrowInvalidArgException@@YGXXZ ; AfxThrowInvalidArgException
$LN5@AfxCrtErro:

; 485  : 		break;
; 486  : 	}
; 487  : 	return error;

  00059	8b 45 08	 mov	 eax, DWORD PTR _error$[ebp]
$LN8@AfxCrtErro:

; 488  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00065	3b ec		 cmp	 ebp, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
$LN10@AfxCrtErro:
  00070	00 00 00 00	 DD	 $LN2@AfxCrtErro
  00074	00 00 00 00	 DD	 $LN4@AfxCrtErro
  00078	00 00 00 00	 DD	 $LN3@AfxCrtErro
  0007c	00 00 00 00	 DD	 $LN1@AfxCrtErro
$LN9@AfxCrtErro:
  00080	00		 DB	 0
  00081	03		 DB	 3
  00082	03		 DB	 3
  00083	03		 DB	 3
  00084	03		 DB	 3
  00085	03		 DB	 3
  00086	03		 DB	 3
  00087	03		 DB	 3
  00088	03		 DB	 3
  00089	03		 DB	 3
  0008a	03		 DB	 3
  0008b	03		 DB	 3
  0008c	01		 DB	 1
  0008d	03		 DB	 3
  0008e	03		 DB	 3
  0008f	03		 DB	 3
  00090	03		 DB	 3
  00091	03		 DB	 3
  00092	03		 DB	 3
  00093	03		 DB	 3
  00094	03		 DB	 3
  00095	03		 DB	 3
  00096	02		 DB	 2
  00097	03		 DB	 3
  00098	03		 DB	 3
  00099	03		 DB	 3
  0009a	03		 DB	 3
  0009b	03		 DB	 3
  0009c	03		 DB	 3
  0009d	03		 DB	 3
  0009e	03		 DB	 3
  0009f	03		 DB	 3
  000a0	03		 DB	 3
  000a1	03		 DB	 3
  000a2	02		 DB	 2
  000a3	03		 DB	 3
  000a4	03		 DB	 3
  000a5	03		 DB	 3
  000a6	03		 DB	 3
  000a7	03		 DB	 3
  000a8	03		 DB	 3
  000a9	03		 DB	 3
  000aa	03		 DB	 3
  000ab	03		 DB	 3
  000ac	03		 DB	 3
  000ad	03		 DB	 3
  000ae	03		 DB	 3
  000af	03		 DB	 3
  000b0	03		 DB	 3
  000b1	03		 DB	 3
  000b2	03		 DB	 3
  000b3	03		 DB	 3
  000b4	03		 DB	 3
  000b5	03		 DB	 3
  000b6	03		 DB	 3
  000b7	03		 DB	 3
  000b8	03		 DB	 3
  000b9	03		 DB	 3
  000ba	03		 DB	 3
  000bb	03		 DB	 3
  000bc	03		 DB	 3
  000bd	03		 DB	 3
  000be	03		 DB	 3
  000bf	03		 DB	 3
  000c0	03		 DB	 3
  000c1	03		 DB	 3
  000c2	03		 DB	 3
  000c3	03		 DB	 3
  000c4	03		 DB	 3
  000c5	03		 DB	 3
  000c6	03		 DB	 3
  000c7	03		 DB	 3
  000c8	03		 DB	 3
  000c9	03		 DB	 3
  000ca	03		 DB	 3
  000cb	03		 DB	 3
  000cc	03		 DB	 3
  000cd	03		 DB	 3
  000ce	03		 DB	 3
  000cf	03		 DB	 3
  000d0	00		 DB	 0
?AfxCrtErrorCheck@@YAHH@Z ENDP				; AfxCrtErrorCheck
_TEXT	ENDS
EXTRN	_wcslen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPB_W@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPB_W@Z PROC	; ATL::ChTraitsCRT<wchar_t>::GetBaseTypeLength, COMDAT

; 693  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 694  : 		// Returns required buffer size in wchar_ts
; 695  : 		return (int)wcslen( pszSrc );

  0001e	8b 45 08	 mov	 eax, DWORD PTR _pszSrc$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 _wcslen
  00027	83 c4 04	 add	 esp, 4

; 696  : 	}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?GetBaseTypeLength@?$ChTraitsCRT@_W@ATL@@SAHPB_W@Z ENDP	; ATL::ChTraitsCRT<wchar_t>::GetBaseTypeLength
_TEXT	ENDS
PUBLIC	?Attach@?$CSimpleStringT@_W$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<wchar_t,0>::Attach
PUBLIC	?AtlThrowImpl@ATL@@YGXJ@Z			; ATL::AtlThrowImpl
PUBLIC	??_C@_1JK@OKOEFEHL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ ; `string'
PUBLIC	??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl?$AA?$AA@ ; `string'
EXTRN	__CrtDbgReportW:PROC
;	COMDAT ??_C@_1JK@OKOEFEHL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_1JK@OKOEFEHL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, ' ', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '\', 00H
	DB	'v', 00H, 'c', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm'
	DB	00H, 'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't'
	DB	00H, 'l', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl?$AA?$AA@ DB '_'
	DB	00H, '_', 00H, 'a', 00H, 't', 00H, 'l', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'd', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 00H
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0?$CSimpleStringT@_W$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pData$ = -32						; size = 4
___atl_condVal$196839 = -20				; size = 4
_this$ = -8						; size = 4
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@_W$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC ; ATL::CSimpleStringT<wchar_t,0>::CSimpleStringT<wchar_t,0>, COMDAT
; _this$ = ecx

; 229  : 	explicit CSimpleStringT(_Inout_ IAtlStringMgr* pStringMgr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN10@CSimpleStr:

; 230  : 	{
; 231  : 		ATLENSURE( pStringMgr != NULL );

  00023	33 c0		 xor	 eax, eax
  00025	83 7d 08 00	 cmp	 DWORD PTR _pStringMgr$[ebp], 0
  00029	0f 95 c0	 setne	 al
  0002c	89 45 ec	 mov	 DWORD PTR ___atl_condVal$196839[ebp], eax
$LN7@CSimpleStr:
  0002f	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$196839[ebp], 0
  00033	75 21		 jne	 SHORT $LN3@CSimpleStr
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1BM@GBBOFEAE@?$AA_?$AA_?$AAa?$AAt?$AAl?$AA_?$AAc?$AAo?$AAn?$AAd?$AAV?$AAa?$AAl?$AA?$AA@
  0003a	6a 00		 push	 0
  0003c	68 e7 00 00 00	 push	 231			; 000000e7H
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1JK@OKOEFEHL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
  00046	6a 02		 push	 2
  00048	e8 00 00 00 00	 call	 __CrtDbgReportW
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
  00050	83 f8 01	 cmp	 eax, 1
  00053	75 01		 jne	 SHORT $LN3@CSimpleStr
  00055	cc		 int	 3
$LN3@CSimpleStr:
  00056	33 c0		 xor	 eax, eax
  00058	75 fc		 jne	 SHORT $LN3@CSimpleStr
  0005a	33 c0		 xor	 eax, eax
  0005c	75 d1		 jne	 SHORT $LN7@CSimpleStr
  0005e	83 7d ec 00	 cmp	 DWORD PTR ___atl_condVal$196839[ebp], 0
  00062	75 0a		 jne	 SHORT $LN9@CSimpleStr
  00064	68 05 40 00 80	 push	 -2147467259		; 80004005H
  00069	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN9@CSimpleStr:
  0006e	33 c0		 xor	 eax, eax
  00070	75 b1		 jne	 SHORT $LN10@CSimpleStr

; 232  : 		CStringData* pData = pStringMgr->GetNilString();

  00072	8b 45 08	 mov	 eax, DWORD PTR _pStringMgr$[ebp]
  00075	8b 10		 mov	 edx, DWORD PTR [eax]
  00077	8b f4		 mov	 esi, esp
  00079	8b 4d 08	 mov	 ecx, DWORD PTR _pStringMgr$[ebp]
  0007c	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007f	ff d0		 call	 eax
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	89 45 e0	 mov	 DWORD PTR _pData$[ebp], eax

; 233  : 		Attach( pData );

  0008b	8b 45 e0	 mov	 eax, DWORD PTR _pData$[ebp]
  0008e	50		 push	 eax
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	e8 00 00 00 00	 call	 ?Attach@?$CSimpleStringT@_W$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<wchar_t,0>::Attach

; 234  : 	}

  00097	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN12@CSimpleStr:
  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
  0009d	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000a3	3b ec		 cmp	 ebp, esp
  000a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c2 04 00	 ret	 4
??0?$CSimpleStringT@_W$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<wchar_t,0>::CSimpleStringT<wchar_t,0>
_TEXT	ENDS
PUBLIC	??_C@_0EM@LIFEDLIA@c?3?2program?5files?2microsoft?5visua@ ; `string'
PUBLIC	?__LINE__Var@?1??AtlThrowImpl@ATL@@YGXJ@Z@4JA	; `ATL::AtlThrowImpl'::`2'::__LINE__Var
PUBLIC	??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6?$AA?$AA@ ; `string'
EXTRN	?AfxThrowOleException@@YGXJ@Z:PROC		; AfxThrowOleException
EXTRN	?atlTraceException@ATL@@3VCTraceCategory@1@A:DWORD ; ATL::atlTraceException
;	COMDAT ??_C@_0EM@LIFEDLIA@c?3?2program?5files?2microsoft?5visua@
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\atlexcept.h
CONST	SEGMENT
??_C@_0EM@LIFEDLIA@c?3?2program?5files?2microsoft?5visua@ DB 'c:\program '
	DB	'files\microsoft visual studio 10.0\vc\atlmfc\include\atlexcep'
	DB	't.h', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??AtlThrowImpl@ATL@@YGXJ@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??AtlThrowImpl@ATL@@YGXJ@Z@4JA DD 041H	; `ATL::AtlThrowImpl'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6?$AA?$AA@ DB 'A'
	DB	00H, 't', 00H, 'l', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'o', 00H
	DB	'w', 00H, ':', 00H, ' ', 00H, 'h', 00H, 'r', 00H, ' ', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H, 'x', 00H, 0aH, 00H
	DB	00H, 00H					; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?AtlThrowImpl@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T215646 = -204						; size = 8
_hr$ = 8						; size = 4
?AtlThrowImpl@ATL@@YGXJ@Z PROC				; ATL::AtlThrowImpl, COMDAT

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00012	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 66   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );

  0001e	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@DFMKPFAK@?$AAA?$AAt?$AAl?$AAT?$AAh?$AAr?$AAo?$AAw?$AA?3?$AA?5?$AAh?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?6?$AA?$AA@
  00027	6a 00		 push	 0
  00029	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3VCTraceCategory@1@A ; ATL::atlTraceException
  0002e	e8 00 00 00 00	 call	 ??BCTraceCategory@ATL@@QBEKXZ ; ATL::CTraceCategory::operator unsigned long
  00033	50		 push	 eax
  00034	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?1??AtlThrowImpl@ATL@@YGXJ@Z@4JA
  0003a	83 c1 01	 add	 ecx, 1
  0003d	51		 push	 ecx
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@LIFEDLIA@c?3?2program?5files?2microsoft?5visua@
  00043	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR $T215646[ebp]
  00049	e8 00 00 00 00	 call	 ??0CTraceFileAndLineInfo@ATL@@QAE@PBDH@Z ; ATL::CTraceFileAndLineInfo::CTraceFileAndLineInfo
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ??RCTraceFileAndLineInfo@ATL@@QBAXKIPB_WZZ ; ATL::CTraceFileAndLineInfo::operator()
  00054	83 c4 14	 add	 esp, 20			; 00000014H

; 67   : #ifdef _AFX
; 68   : 	if( hr == E_OUTOFMEMORY )

  00057	81 7d 08 0e 00
	07 80		 cmp	 DWORD PTR _hr$[ebp], -2147024882 ; 8007000eH
  0005e	75 07		 jne	 SHORT $LN2@AtlThrowIm

; 69   : 	{
; 70   : 		AfxThrowMemoryException();

  00060	e8 00 00 00 00	 call	 ?AfxThrowMemoryException@@YGXXZ ; AfxThrowMemoryException

; 71   : 	}
; 72   : 	else

  00065	eb 09		 jmp	 SHORT $LN4@AtlThrowIm
$LN2@AtlThrowIm:

; 73   : 	{
; 74   : 		AfxThrowOleException( hr );

  00067	8b 45 08	 mov	 eax, DWORD PTR _hr$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?AfxThrowOleException@@YGXJ@Z ; AfxThrowOleException
$LN4@AtlThrowIm:

; 75   : 	}
; 76   : #else
; 77   : 	throw CAtlException( hr );
; 78   : #endif
; 79   : };

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
?AtlThrowImpl@ATL@@YGXJ@Z ENDP				; ATL::AtlThrowImpl
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
PUBLIC	?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
;	COMDAT ??1?$CSimpleStringT@_W$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_this$ = -8						; size = 4
??1?$CSimpleStringT@_W$0A@@ATL@@QAE@XZ PROC		; ATL::CSimpleStringT<wchar_t,0>::~CSimpleStringT<wchar_t,0>, COMDAT
; _this$ = ecx

; 286  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 287  : 		CStringData* pData = GetData();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
  0002b	89 45 ec	 mov	 DWORD PTR _pData$[ebp], eax

; 288  : 		pData->Release();

  0002e	8b 4d ec	 mov	 ecx, DWORD PTR _pData$[ebp]
  00031	e8 00 00 00 00	 call	 ?Release@CStringData@ATL@@QAEXXZ ; ATL::CStringData::Release

; 289  : 	}

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
??1?$CSimpleStringT@_W$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<wchar_t,0>::~CSimpleStringT<wchar_t,0>
_TEXT	ENDS
PUBLIC	??_C@_1BG@GPELCNED@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1BG@GPELCNED@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@GPELCNED@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'n'
	DB	00H, 'R', 00H, 'e', 00H, 'f', 00H, 's', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Release@CStringData@ATL@@QAEXXZ PROC			; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 111  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 112  : 		ATLASSERT( nRefs != 0 );

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0002a	75 1e		 jne	 SHORT $LN4@Release
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_1BG@GPELCNED@?$AAn?$AAR?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
  00031	6a 00		 push	 0
  00033	6a 70		 push	 112			; 00000070H
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1JK@OKOEFEHL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
  0003a	6a 02		 push	 2
  0003c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00041	83 c4 14	 add	 esp, 20			; 00000014H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN4@Release
  00049	cc		 int	 3
$LN4@Release:

; 113  : 
; 114  : 		if( _AtlInterlockedDecrement( &nRefs ) <= 0 )

  0004a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 c0 0c	 add	 eax, 12			; 0000000cH
  00050	83 c9 ff	 or	 ecx, -1
  00053	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  00057	49		 dec	 ecx
  00058	85 c9		 test	 ecx, ecx
  0005a	7f 1e		 jg	 SHORT $LN2@Release

; 115  : 		{
; 116  : 			pStringMgr->Free( this );

  0005c	8b f4		 mov	 esi, esp
  0005e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00061	50		 push	 eax
  00062	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	8b 11		 mov	 edx, DWORD PTR [ecx]
  00067	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006c	8b 12		 mov	 edx, DWORD PTR [edx]
  0006e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00071	ff d0		 call	 eax
  00073	3b f4		 cmp	 esi, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Release:

; 117  : 		}
; 118  : 	}

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_W@Z ; ATL::CSimpleStringT<wchar_t,0>::SetString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@PB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@PB_W@Z PROC	; ATL::CSimpleStringT<wchar_t,0>::operator=, COMDAT
; _this$ = ecx

; 339  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 340  : 		SetString( pszSrc );

  00023	8b 45 08	 mov	 eax, DWORD PTR _pszSrc$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_W@Z ; ATL::CSimpleStringT<wchar_t,0>::SetString

; 341  : 
; 342  : 		return( *this );

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 343  : 	}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??4?$CSimpleStringT@_W$0A@@ATL@@QAEAAV01@PB_W@Z ENDP	; ATL::CSimpleStringT<wchar_t,0>::operator=
_TEXT	ENDS
PUBLIC	?PrepareWrite@?$CSimpleStringT@_W$0A@@ATL@@AAEPA_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetBuffer@?$CSimpleStringT@_W$0A@@ATL@@QAEPA_WH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nMinBufferLength$ = 8					; size = 4
?GetBuffer@?$CSimpleStringT@_W$0A@@ATL@@QAEPA_WH@Z PROC	; ATL::CSimpleStringT<wchar_t,0>::GetBuffer, COMDAT
; _this$ = ecx

; 533  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 534  : 		return( PrepareWrite( nMinBufferLength ) );

  00023	8b 45 08	 mov	 eax, DWORD PTR _nMinBufferLength$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?PrepareWrite@?$CSimpleStringT@_W$0A@@ATL@@AAEPA_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite

; 535  : 	}

  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?GetBuffer@?$CSimpleStringT@_W$0A@@ATL@@QAEPA_WH@Z ENDP	; ATL::CSimpleStringT<wchar_t,0>::GetBuffer
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Attach@?$CSimpleStringT@_W$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@_W$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC ; ATL::CSimpleStringT<wchar_t,0>::Attach, COMDAT
; _this$ = ecx

; 802  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 803  : 		m_pszData = static_cast< PXSTR >( pData->data() );

  00023	8b 4d 08	 mov	 ecx, DWORD PTR _pData$[ebp]
  00026	e8 00 00 00 00	 call	 ?data@CStringData@ATL@@QAEPAXXZ ; ATL::CStringData::data
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	89 01		 mov	 DWORD PTR [ecx], eax

; 804  : 	}

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 04 00	 ret	 4
?Attach@?$CSimpleStringT@_W$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<wchar_t,0>::Attach
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@CStringData@ATL@@QAEPAXXZ PROC			; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 84   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 85   : 		return (this+1);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 10	 add	 eax, 16			; 00000010H

; 86   : 	}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ PROC ; ATL::CSimpleStringT<wchar_t,0>::GetData, COMDAT
; _this$ = ecx

; 822  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 823  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	83 e8 10	 sub	 eax, 16			; 00000010H

; 824  : 	}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<wchar_t,0>::GetData
_TEXT	ENDS
PUBLIC	?PrepareWrite2@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PrepareWrite@?$CSimpleStringT@_W$0A@@ATL@@AAEPA_WH@Z
_TEXT	SEGMENT
_nTooShort$ = -44					; size = 4
_nShared$ = -32						; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite@?$CSimpleStringT@_W$0A@@ATL@@AAEPA_WH@Z PROC ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite, COMDAT
; _this$ = ecx

; 826  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 827  : 		if (nLength < 0)

  00023	83 7d 08 00	 cmp	 DWORD PTR _nLength$[ebp], 0
  00027	7d 0a		 jge	 SHORT $LN2@PrepareWri

; 828  : 			AtlThrow(E_INVALIDARG);

  00029	68 57 00 07 80	 push	 -2147024809		; 80070057H
  0002e	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@PrepareWri:

; 829  : 
; 830  : 		CStringData* pOldData = GetData();

  00033	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
  0003b	89 45 ec	 mov	 DWORD PTR _pOldData$[ebp], eax

; 831  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

  0003e	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  00041	b9 01 00 00 00	 mov	 ecx, 1
  00046	2b 48 0c	 sub	 ecx, DWORD PTR [eax+12]
  00049	89 4d e0	 mov	 DWORD PTR _nShared$[ebp], ecx

; 832  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

  0004c	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  0004f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00052	2b 4d 08	 sub	 ecx, DWORD PTR _nLength$[ebp]
  00055	89 4d d4	 mov	 DWORD PTR _nTooShort$[ebp], ecx

; 833  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

  00058	8b 45 e0	 mov	 eax, DWORD PTR _nShared$[ebp]
  0005b	0b 45 d4	 or	 eax, DWORD PTR _nTooShort$[ebp]
  0005e	7d 0c		 jge	 SHORT $LN1@PrepareWri

; 834  : 		{
; 835  : 			PrepareWrite2( nLength );

  00060	8b 45 08	 mov	 eax, DWORD PTR _nLength$[ebp]
  00063	50		 push	 eax
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite2
$LN1@PrepareWri:

; 836  : 		}
; 837  : 
; 838  : 		return( m_pszData );

  0006c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN4@PrepareWri:

; 839  : 	}

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
?PrepareWrite@?$CSimpleStringT@_W$0A@@ATL@@AAEPA_WH@Z ENDP ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite
_TEXT	ENDS
EXTRN	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z:PROC ; AfxFindStringResourceHandle
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\afxstr.h
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?FindStringResourceInstance@?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@SAPAUHINSTANCE__@@I@Z PROC ; StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> >::FindStringResourceInstance, COMDAT

; 46   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 47   : 		return( AfxFindStringResourceHandle( nID ) );

  0001e	8b 45 08	 mov	 eax, DWORD PTR _nID$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle

; 48   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?FindStringResourceInstance@?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@SAPAUHINSTANCE__@@I@Z ENDP ; StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> >::FindStringResourceInstance
_TEXT	ENDS
EXTRN	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ:PROC ; AfxGetStringManager
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetDefaultManager@?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ PROC ; StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> >::GetDefaultManager, COMDAT

; 51   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 52   : 		return( AfxGetStringManager() );

  0001e	e8 00 00 00 00	 call	 ?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager

; 53   : 	}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?GetDefaultManager@?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@SAPAUIAtlStringMgr@ATL@@XZ ENDP ; StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?SetLength@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<wchar_t,0>::SetLength
PUBLIC	??_C@_1CA@FILBIMGF@?$AAn?$AAN?$AAe?$AAw?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1CA@FILBIMGF@?$AAn?$AAN?$AAe?$AAw?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
??_C@_1CA@FILBIMGF@?$AAn?$AAN?$AAe?$AAw?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'n'
	DB	00H, 'N', 00H, 'e', 00H, 'w', 00H, 'L', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '>', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@_W$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nNewLength$ = 8					; size = 4
?ReleaseBufferSetLength@?$CSimpleStringT@_W$0A@@ATL@@QAEXH@Z PROC ; ATL::CSimpleStringT<wchar_t,0>::ReleaseBufferSetLength, COMDAT
; _this$ = ecx

; 592  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 593  : 		ATLASSERT( nNewLength >= 0 );

  00023	83 7d 08 00	 cmp	 DWORD PTR _nNewLength$[ebp], 0
  00027	7d 21		 jge	 SHORT $LN3@ReleaseBuf
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_1CA@FILBIMGF@?$AAn?$AAN?$AAe?$AAw?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
  0002e	6a 00		 push	 0
  00030	68 51 02 00 00	 push	 593			; 00000251H
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1JK@OKOEFEHL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
  0003a	6a 02		 push	 2
  0003c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00041	83 c4 14	 add	 esp, 20			; 00000014H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN3@ReleaseBuf
  00049	cc		 int	 3
$LN3@ReleaseBuf:

; 594  : 		SetLength( nNewLength );

  0004a	8b 45 08	 mov	 eax, DWORD PTR _nNewLength$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?SetLength@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::SetLength

; 595  : 	}

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
?ReleaseBufferSetLength@?$CSimpleStringT@_W$0A@@ATL@@QAEXH@Z ENDP ; ATL::CSimpleStringT<wchar_t,0>::ReleaseBufferSetLength
_TEXT	ENDS
PUBLIC	??_C@_1EG@PELIOAAG@?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAG?$AAe?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAn?$AAA?$AAl?$AAl?$AAo?$AAc?$AAL?$AAe?$AAn?$AAg@ ; `string'
PUBLIC	??_C@_1BK@OGOKLNEF@?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1EG@PELIOAAG@?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAG?$AAe?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAn?$AAA?$AAl?$AAl?$AAo?$AAc?$AAL?$AAe?$AAn?$AAg@
CONST	SEGMENT
??_C@_1EG@PELIOAAG@?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAG?$AAe?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAn?$AAA?$AAl?$AAl?$AAo?$AAc?$AAL?$AAe?$AAn?$AAg@ DB 'n'
	DB	00H, 'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'G', 00H, 'e', 00H, 't'
	DB	00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H, '(', 00H, ')', 00H
	DB	'-', 00H, '>', 00H, 'n', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H
	DB	'h', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@OGOKLNEF@?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@OGOKLNEF@?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'n'
	DB	00H, 'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?SetLength@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z PROC	; ATL::CSimpleStringT<wchar_t,0>::SetLength, COMDAT
; _this$ = ecx

; 890  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 891  : 		ATLASSERT( nLength >= 0 );

  00023	83 7d 08 00	 cmp	 DWORD PTR _nLength$[ebp], 0
  00027	7d 21		 jge	 SHORT $LN5@SetLength
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@OGOKLNEF@?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
  0002e	6a 00		 push	 0
  00030	68 7b 03 00 00	 push	 891			; 0000037bH
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_1JK@OKOEFEHL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
  0003a	6a 02		 push	 2
  0003c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00041	83 c4 14	 add	 esp, 20			; 00000014H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN5@SetLength
  00049	cc		 int	 3
$LN5@SetLength:

; 892  : 		ATLASSERT( nLength <= GetData()->nAllocLength );

  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _nLength$[ebp]
  00055	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00058	7e 21		 jle	 SHORT $LN6@SetLength
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_1EG@PELIOAAG@?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAG?$AAe?$AAt?$AAD?$AAa?$AAt?$AAa?$AA?$CI?$AA?$CJ?$AA?9?$AA?$DO?$AAn?$AAA?$AAl?$AAl?$AAo?$AAc?$AAL?$AAe?$AAn?$AAg@
  0005f	6a 00		 push	 0
  00061	68 7c 03 00 00	 push	 892			; 0000037cH
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_1JK@OKOEFEHL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
  0006b	6a 02		 push	 2
  0006d	e8 00 00 00 00	 call	 __CrtDbgReportW
  00072	83 c4 14	 add	 esp, 20			; 00000014H
  00075	83 f8 01	 cmp	 eax, 1
  00078	75 01		 jne	 SHORT $LN6@SetLength
  0007a	cc		 int	 3
$LN6@SetLength:

; 893  : 
; 894  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

  0007b	83 7d 08 00	 cmp	 DWORD PTR _nLength$[ebp], 0
  0007f	7c 10		 jl	 SHORT $LN1@SetLength
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
  00089	8b 4d 08	 mov	 ecx, DWORD PTR _nLength$[ebp]
  0008c	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0008f	7e 0a		 jle	 SHORT $LN2@SetLength
$LN1@SetLength:

; 895  : 			AtlThrow(E_INVALIDARG);

  00091	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00096	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@SetLength:

; 896  : 
; 897  : 		GetData()->nDataLength = nLength;

  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	e8 00 00 00 00	 call	 ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _nLength$[ebp]
  000a6	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 898  : 		m_pszData[nLength] = 0;

  000a9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ac	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ae	33 d2		 xor	 edx, edx
  000b0	8b 45 08	 mov	 eax, DWORD PTR _nLength$[ebp]
  000b3	66 89 14 41	 mov	 WORD PTR [ecx+eax*2], dx
$LN4@SetLength:

; 899  : 	}

  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000c0	3b ec		 cmp	 ebp, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 04 00	 ret	 4
?SetLength@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<wchar_t,0>::SetLength
_TEXT	ENDS
PUBLIC	?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::SetString
PUBLIC	?StringLength@?$CSimpleStringT@_W$0A@@ATL@@SAHPB_W@Z ; ATL::CSimpleStringT<wchar_t,0>::StringLength
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_W@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_W@Z PROC	; ATL::CSimpleStringT<wchar_t,0>::SetString, COMDAT
; _this$ = ecx

; 627  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 628  : 		SetString( pszSrc, StringLength( pszSrc ) );

  00023	8b 45 08	 mov	 eax, DWORD PTR _pszSrc$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?StringLength@?$CSimpleStringT@_W$0A@@ATL@@SAHPB_W@Z ; ATL::CSimpleStringT<wchar_t,0>::StringLength
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _pszSrc$[ebp]
  00033	51		 push	 ecx
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::SetString

; 629  : 	}

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_W@Z ENDP	; ATL::CSimpleStringT<wchar_t,0>::SetString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@_W$0A@@ATL@@SAHPB_W@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?StringLength@?$CSimpleStringT@_W$0A@@ATL@@SAHPB_W@Z PROC ; ATL::CSimpleStringT<wchar_t,0>::StringLength, COMDAT

; 752  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 753  : 		if( psz == NULL )

  0001e	83 7d 08 00	 cmp	 DWORD PTR _psz$[ebp], 0
  00022	75 04		 jne	 SHORT $LN1@StringLeng

; 754  : 		{
; 755  : 			return( 0 );

  00024	33 c0		 xor	 eax, eax
  00026	eb 0c		 jmp	 SHORT $LN2@StringLeng
$LN1@StringLeng:

; 756  : 		}
; 757  : 		return( int( wcslen( psz ) ) );

  00028	8b 45 08	 mov	 eax, DWORD PTR _psz$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 _wcslen
  00031	83 c4 04	 add	 esp, 4
$LN2@StringLeng:

; 758  : 	}

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
?StringLength@?$CSimpleStringT@_W$0A@@ATL@@SAHPB_W@Z ENDP ; ATL::CSimpleStringT<wchar_t,0>::StringLength
_TEXT	ENDS
PUBLIC	?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
PUBLIC	?CopyCharsOverlapped@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyCharsOverlapped
PUBLIC	?GetAllocLength@?$CSimpleStringT@_W$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<wchar_t,0>::GetAllocLength
PUBLIC	?GetString@?$CSimpleStringT@_W$0A@@ATL@@QBEPB_WXZ ; ATL::CSimpleStringT<wchar_t,0>::GetString
PUBLIC	?GetLength@?$CSimpleStringT@_W$0A@@ATL@@QBEHXZ	; ATL::CSimpleStringT<wchar_t,0>::GetLength
PUBLIC	?Empty@?$CSimpleStringT@_W$0A@@ATL@@QAEXXZ	; ATL::CSimpleStringT<wchar_t,0>::Empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_WH@Z
_TEXT	SEGMENT
_pszBuffer$197131 = -44					; size = 4
_nOffset$197130 = -32					; size = 4
_nOldLength$197129 = -20				; size = 4
_this$ = -8						; size = 4
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_WH@Z PROC ; ATL::CSimpleStringT<wchar_t,0>::SetString, COMDAT
; _this$ = ecx

; 633  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 634  : 		if( nLength == 0 )

  00023	83 7d 0c 00	 cmp	 DWORD PTR _nLength$[ebp], 0
  00027	75 0d		 jne	 SHORT $LN5@SetString

; 635  : 		{
; 636  : 			Empty();

  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?Empty@?$CSimpleStringT@_W$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<wchar_t,0>::Empty

; 637  : 		}
; 638  : 		else

  00031	e9 92 00 00 00	 jmp	 $LN7@SetString
$LN5@SetString:

; 639  : 		{
; 640  : 			// It is possible that pszSrc points to a location inside of our
; 641  : 			// buffer.  GetBuffer() might change m_pszData if (1) the buffer
; 642  : 			// is shared or (2) the buffer is too small to hold the new
; 643  : 			// string.  We detect this aliasing, and modify pszSrc to point
; 644  : 			// into the newly allocated buffer instead.
; 645  : 
; 646  : 			if(pszSrc == NULL)

  00036	83 7d 08 00	 cmp	 DWORD PTR _pszSrc$[ebp], 0
  0003a	75 0a		 jne	 SHORT $LN3@SetString

; 647  : 				AtlThrow(E_INVALIDARG);

  0003c	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00041	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN3@SetString:

; 648  : 
; 649  : 			UINT nOldLength = GetLength();

  00046	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?GetLength@?$CSimpleStringT@_W$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<wchar_t,0>::GetLength
  0004e	89 45 ec	 mov	 DWORD PTR _nOldLength$197129[ebp], eax

; 650  : 			UINT_PTR nOffset = pszSrc-GetString();

  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?GetString@?$CSimpleStringT@_W$0A@@ATL@@QBEPB_WXZ ; ATL::CSimpleStringT<wchar_t,0>::GetString
  00059	8b 4d 08	 mov	 ecx, DWORD PTR _pszSrc$[ebp]
  0005c	2b c8		 sub	 ecx, eax
  0005e	d1 f9		 sar	 ecx, 1
  00060	89 4d e0	 mov	 DWORD PTR _nOffset$197130[ebp], ecx

; 651  : 			// If 0 <= nOffset <= nOldLength, then pszSrc points into our
; 652  : 			// buffer
; 653  : 
; 654  : 			PXSTR pszBuffer = GetBuffer( nLength );

  00063	8b 45 0c	 mov	 eax, DWORD PTR _nLength$[ebp]
  00066	50		 push	 eax
  00067	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?GetBuffer@?$CSimpleStringT@_W$0A@@ATL@@QAEPA_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::GetBuffer
  0006f	89 45 d4	 mov	 DWORD PTR _pszBuffer$197131[ebp], eax

; 655  : 			if( nOffset <= nOldLength )

  00072	8b 45 e0	 mov	 eax, DWORD PTR _nOffset$197130[ebp]
  00075	3b 45 ec	 cmp	 eax, DWORD PTR _nOldLength$197129[ebp]
  00078	77 25		 ja	 SHORT $LN2@SetString

; 656  : 			{
; 657  : 				CopyCharsOverlapped( pszBuffer, GetAllocLength(),
; 658  : 					pszBuffer+nOffset, nLength );

  0007a	8b 45 0c	 mov	 eax, DWORD PTR _nLength$[ebp]
  0007d	50		 push	 eax
  0007e	8b 4d e0	 mov	 ecx, DWORD PTR _nOffset$197130[ebp]
  00081	8b 55 d4	 mov	 edx, DWORD PTR _pszBuffer$197131[ebp]
  00084	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  00087	50		 push	 eax
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?GetAllocLength@?$CSimpleStringT@_W$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<wchar_t,0>::GetAllocLength
  00090	50		 push	 eax
  00091	8b 4d d4	 mov	 ecx, DWORD PTR _pszBuffer$197131[ebp]
  00094	51		 push	 ecx
  00095	e8 00 00 00 00	 call	 ?CopyCharsOverlapped@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyCharsOverlapped
  0009a	83 c4 10	 add	 esp, 16			; 00000010H

; 659  : 			}
; 660  : 			else

  0009d	eb 1d		 jmp	 SHORT $LN1@SetString
$LN2@SetString:

; 661  : 			{
; 662  : 				CopyChars( pszBuffer, GetAllocLength(), pszSrc, nLength );

  0009f	8b 45 0c	 mov	 eax, DWORD PTR _nLength$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _pszSrc$[ebp]
  000a6	51		 push	 ecx
  000a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	e8 00 00 00 00	 call	 ?GetAllocLength@?$CSimpleStringT@_W$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<wchar_t,0>::GetAllocLength
  000af	50		 push	 eax
  000b0	8b 55 d4	 mov	 edx, DWORD PTR _pszBuffer$197131[ebp]
  000b3	52		 push	 edx
  000b4	e8 00 00 00 00	 call	 ?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
  000b9	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@SetString:

; 663  : 			}
; 664  : 			ReleaseBufferSetLength( nLength );

  000bc	8b 45 0c	 mov	 eax, DWORD PTR _nLength$[ebp]
  000bf	50		 push	 eax
  000c0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	e8 00 00 00 00	 call	 ?ReleaseBufferSetLength@?$CSimpleStringT@_W$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::ReleaseBufferSetLength
$LN7@SetString:

; 665  : 		}
; 666  : 	}

  000c8	5f		 pop	 edi
  000c9	5e		 pop	 esi
  000ca	5b		 pop	 ebx
  000cb	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  000d1	3b ec		 cmp	 ebp, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c2 08 00	 ret	 8
?SetString@?$CSimpleStringT@_W$0A@@ATL@@QAEXPB_WH@Z ENDP ; ATL::CSimpleStringT<wchar_t,0>::SetString
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Empty@?$CSimpleStringT@_W$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT
_pNewData$196422 = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
?Empty@?$CSimpleStringT@_W$0A@@ATL@@QAEXXZ PROC		; ATL::CSimpleStringT<wchar_t,0>::Empty, COMDAT
; _this$ = ecx

; 462  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : 		CStringData* pOldData = GetData();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
  0002b	89 45 ec	 mov	 DWORD PTR _pOldData$[ebp], eax

; 464  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

  0002e	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	89 4d e0	 mov	 DWORD PTR _pStringMgr$[ebp], ecx

; 465  : 		if( pOldData->nDataLength == 0 )

  00036	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  00039	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0003d	75 02		 jne	 SHORT $LN3@Empty

; 466  : 		{
; 467  : 			return;

  0003f	eb 48		 jmp	 SHORT $LN4@Empty
$LN3@Empty:

; 468  : 		}
; 469  : 
; 470  : 		if( pOldData->IsLocked() )

  00041	8b 4d ec	 mov	 ecx, DWORD PTR _pOldData$[ebp]
  00044	e8 00 00 00 00	 call	 ?IsLocked@CStringData@ATL@@QBE_NXZ ; ATL::CStringData::IsLocked
  00049	0f b6 c0	 movzx	 eax, al
  0004c	85 c0		 test	 eax, eax
  0004e	74 0c		 je	 SHORT $LN2@Empty

; 471  : 		{
; 472  : 			// Don't reallocate a locked buffer that's shrinking
; 473  : 			SetLength( 0 );

  00050	6a 00		 push	 0
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?SetLength@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::SetLength

; 474  : 		}
; 475  : 		else

  0005a	eb 2d		 jmp	 SHORT $LN4@Empty
$LN2@Empty:

; 476  : 		{
; 477  : 			pOldData->Release();

  0005c	8b 4d ec	 mov	 ecx, DWORD PTR _pOldData$[ebp]
  0005f	e8 00 00 00 00	 call	 ?Release@CStringData@ATL@@QAEXXZ ; ATL::CStringData::Release

; 478  : 			CStringData* pNewData = pStringMgr->GetNilString();

  00064	8b 45 e0	 mov	 eax, DWORD PTR _pStringMgr$[ebp]
  00067	8b 10		 mov	 edx, DWORD PTR [eax]
  00069	8b f4		 mov	 esi, esp
  0006b	8b 4d e0	 mov	 ecx, DWORD PTR _pStringMgr$[ebp]
  0006e	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00071	ff d0		 call	 eax
  00073	3b f4		 cmp	 esi, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	89 45 d4	 mov	 DWORD PTR _pNewData$196422[ebp], eax

; 479  : 			Attach( pNewData );

  0007d	8b 45 d4	 mov	 eax, DWORD PTR _pNewData$196422[ebp]
  00080	50		 push	 eax
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?Attach@?$CSimpleStringT@_W$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<wchar_t,0>::Attach
$LN4@Empty:

; 480  : 		}
; 481  : 	}

  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
?Empty@?$CSimpleStringT@_W$0A@@ATL@@QAEXXZ ENDP		; ATL::CSimpleStringT<wchar_t,0>::Empty
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsLocked@CStringData@ATL@@QBE_NXZ PROC			; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 94   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 95   : 		return nRefs < 0;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	33 c9		 xor	 ecx, ecx
  00028	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0002c	0f 9c c1	 setl	 cl
  0002f	8a c1		 mov	 al, cl

; 96   : 	}

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@_W$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLength@?$CSimpleStringT@_W$0A@@ATL@@QBEHXZ PROC	; ATL::CSimpleStringT<wchar_t,0>::GetLength, COMDAT
; _this$ = ecx

; 544  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 545  : 		return( GetData()->nDataLength );

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
  0002b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 546  : 	}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?GetLength@?$CSimpleStringT@_W$0A@@ATL@@QBEHXZ ENDP	; ATL::CSimpleStringT<wchar_t,0>::GetLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@_W$0A@@ATL@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetString@?$CSimpleStringT@_W$0A@@ATL@@QBEPB_WXZ PROC	; ATL::CSimpleStringT<wchar_t,0>::GetString, COMDAT
; _this$ = ecx

; 554  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 555  : 		return( m_pszData );

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]

; 556  : 	}

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetString@?$CSimpleStringT@_W$0A@@ATL@@QBEPB_WXZ ENDP	; ATL::CSimpleStringT<wchar_t,0>::GetString
_TEXT	ENDS
EXTRN	_memcpy_s:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_nDestLen$ = 12						; size = 4
_pchSrc$ = 16						; size = 4
_nChars$ = 20						; size = 4
?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z PROC ; ATL::CSimpleStringT<wchar_t,0>::CopyChars, COMDAT

; 718  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 719  : 		memcpy_s( pchDest, nDestLen*sizeof( XCHAR ),
; 720  : 			pchSrc, nChars*sizeof( XCHAR ) );

  0001e	8b 45 14	 mov	 eax, DWORD PTR _nChars$[ebp]
  00021	d1 e0		 shl	 eax, 1
  00023	50		 push	 eax
  00024	8b 4d 10	 mov	 ecx, DWORD PTR _pchSrc$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 0c	 mov	 edx, DWORD PTR _nDestLen$[ebp]
  0002b	d1 e2		 shl	 edx, 1
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR _pchDest$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 _memcpy_s
  00037	83 c4 10	 add	 esp, 16			; 00000010H

; 721  : 	}

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ENDP ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
_TEXT	ENDS
PUBLIC	?Reallocate@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::Reallocate
PUBLIC	?Fork@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<wchar_t,0>::Fork
PUBLIC	?IsShared@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsShared
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nNewLength$197144 = -32				; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?PrepareWrite2@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z PROC ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite2, COMDAT
; _this$ = ecx

; 841  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 842  : 		CStringData* pOldData = GetData();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
  0002b	89 45 ec	 mov	 DWORD PTR _pOldData$[ebp], eax

; 843  : 		if( pOldData->nDataLength > nLength )

  0002e	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  00031	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00034	3b 4d 08	 cmp	 ecx, DWORD PTR _nLength$[ebp]
  00037	7e 09		 jle	 SHORT $LN7@PrepareWri@2

; 844  : 		{
; 845  : 			nLength = pOldData->nDataLength;

  00039	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  0003c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003f	89 4d 08	 mov	 DWORD PTR _nLength$[ebp], ecx
$LN7@PrepareWri@2:

; 846  : 		}
; 847  : 		if( pOldData->IsShared() )

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _pOldData$[ebp]
  00045	e8 00 00 00 00	 call	 ?IsShared@CStringData@ATL@@QBE_NXZ ; ATL::CStringData::IsShared
  0004a	0f b6 c0	 movzx	 eax, al
  0004d	85 c0		 test	 eax, eax
  0004f	74 0e		 je	 SHORT $LN6@PrepareWri@2

; 848  : 		{
; 849  : 			Fork( nLength );

  00051	8b 45 08	 mov	 eax, DWORD PTR _nLength$[ebp]
  00054	50		 push	 eax
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?Fork@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::Fork
  0005d	eb 52		 jmp	 SHORT $LN8@PrepareWri@2
$LN6@PrepareWri@2:

; 850  : 		}
; 851  : 		else if( pOldData->nAllocLength < nLength )

  0005f	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  00062	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00065	3b 4d 08	 cmp	 ecx, DWORD PTR _nLength$[ebp]
  00068	7d 47		 jge	 SHORT $LN8@PrepareWri@2

; 852  : 		{
; 853  : 			// Grow exponentially, until we hit 1G, then by 1M thereafter.
; 854  : 			int nNewLength = pOldData->nAllocLength;

  0006a	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  0006d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00070	89 4d e0	 mov	 DWORD PTR _nNewLength$197144[ebp], ecx

; 855  : 			if( nNewLength > 1024 * 1024 * 1024 )

  00073	81 7d e0 00 00
	00 40		 cmp	 DWORD PTR _nNewLength$197144[ebp], 1073741824 ; 40000000H
  0007a	7e 0d		 jle	 SHORT $LN3@PrepareWri@2

; 856  : 			{
; 857  : 				nNewLength += 1024 * 1024;

  0007c	8b 45 e0	 mov	 eax, DWORD PTR _nNewLength$197144[ebp]
  0007f	05 00 00 10 00	 add	 eax, 1048576		; 00100000H
  00084	89 45 e0	 mov	 DWORD PTR _nNewLength$197144[ebp], eax

; 858  : 			}
; 859  : 			else

  00087	eb 0e		 jmp	 SHORT $LN2@PrepareWri@2
$LN3@PrepareWri@2:

; 860  : 			{
; 861  : 				// Exponential growth factor is 1.5.
; 862  : 				nNewLength = nNewLength + nNewLength / 2;

  00089	8b 45 e0	 mov	 eax, DWORD PTR _nNewLength$197144[ebp]
  0008c	99		 cdq
  0008d	2b c2		 sub	 eax, edx
  0008f	d1 f8		 sar	 eax, 1
  00091	03 45 e0	 add	 eax, DWORD PTR _nNewLength$197144[ebp]
  00094	89 45 e0	 mov	 DWORD PTR _nNewLength$197144[ebp], eax
$LN2@PrepareWri@2:

; 863  : 			}
; 864  : 			if( nNewLength < nLength )

  00097	8b 45 e0	 mov	 eax, DWORD PTR _nNewLength$197144[ebp]
  0009a	3b 45 08	 cmp	 eax, DWORD PTR _nLength$[ebp]
  0009d	7d 06		 jge	 SHORT $LN1@PrepareWri@2

; 865  : 			{
; 866  : 				nNewLength = nLength;

  0009f	8b 45 08	 mov	 eax, DWORD PTR _nLength$[ebp]
  000a2	89 45 e0	 mov	 DWORD PTR _nNewLength$197144[ebp], eax
$LN1@PrepareWri@2:

; 867  : 			}
; 868  : 			Reallocate( nNewLength );

  000a5	8b 45 e0	 mov	 eax, DWORD PTR _nNewLength$197144[ebp]
  000a8	50		 push	 eax
  000a9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	e8 00 00 00 00	 call	 ?Reallocate@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<wchar_t,0>::Reallocate
$LN8@PrepareWri@2:

; 869  : 		}
; 870  : 	}

  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000ba	3b ec		 cmp	 ebp, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 04 00	 ret	 4
?PrepareWrite2@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ENDP ; ATL::CSimpleStringT<wchar_t,0>::PrepareWrite2
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsShared@CStringData@ATL@@QBE_NXZ PROC			; ATL::CStringData::IsShared, COMDAT
; _this$ = ecx

; 98   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 99   : 		return( nRefs > 1 );

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	33 c9		 xor	 ecx, ecx
  00028	83 78 0c 01	 cmp	 DWORD PTR [eax+12], 1
  0002c	0f 9f c1	 setg	 cl
  0002f	8a c1		 mov	 al, cl

; 100  : 	}

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?IsShared@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsShared
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAllocLength@?$CSimpleStringT@_W$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetAllocLength@?$CSimpleStringT@_W$0A@@ATL@@QBEHXZ PROC ; ATL::CSimpleStringT<wchar_t,0>::GetAllocLength, COMDAT
; _this$ = ecx

; 511  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 512  : 		return( GetData()->nAllocLength );

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
  0002b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 513  : 	}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?GetAllocLength@?$CSimpleStringT@_W$0A@@ATL@@QBEHXZ ENDP ; ATL::CSimpleStringT<wchar_t,0>::GetAllocLength
_TEXT	ENDS
EXTRN	_memmove_s:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_nDestLen$ = 12						; size = 4
_pchSrc$ = 16						; size = 4
_nChars$ = 20						; size = 4
?CopyCharsOverlapped@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z PROC ; ATL::CSimpleStringT<wchar_t,0>::CopyCharsOverlapped, COMDAT

; 739  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 740  : 		memmove_s( pchDest, nDestLen*sizeof( XCHAR ),
; 741  : 			pchSrc, nChars*sizeof( XCHAR ) );

  0001e	8b 45 14	 mov	 eax, DWORD PTR _nChars$[ebp]
  00021	d1 e0		 shl	 eax, 1
  00023	50		 push	 eax
  00024	8b 4d 10	 mov	 ecx, DWORD PTR _pchSrc$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 0c	 mov	 edx, DWORD PTR _nDestLen$[ebp]
  0002b	d1 e2		 shl	 edx, 1
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR _pchDest$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 _memmove_s
  00037	83 c4 10	 add	 esp, 16			; 00000010H

; 742  : 	}

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?CopyCharsOverlapped@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ENDP ; ATL::CSimpleStringT<wchar_t,0>::CopyCharsOverlapped
_TEXT	ENDS
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Fork@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
tv82 = -256						; size = 4
tv74 = -256						; size = 4
_nCharsToCopy$ = -56					; size = 4
_pNewData$ = -44					; size = 4
_nOldLength$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Fork@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z PROC		; ATL::CSimpleStringT<wchar_t,0>::Fork, COMDAT
; _this$ = ecx

; 806  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 00 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-256]
  00013	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 807  : 		CStringData* pOldData = GetData();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
  0002b	89 45 ec	 mov	 DWORD PTR _pOldData$[ebp], eax

; 808  : 		int nOldLength = pOldData->nDataLength;

  0002e	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  00031	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00034	89 4d e0	 mov	 DWORD PTR _nOldLength$[ebp], ecx

; 809  : 		CStringData* pNewData = pOldData->pStringMgr->Clone()->Allocate( nLength, sizeof( XCHAR ) );

  00037	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  0003a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003c	8b 55 ec	 mov	 edx, DWORD PTR _pOldData$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]
  00041	8b 11		 mov	 edx, DWORD PTR [ecx]
  00043	8b f4		 mov	 esi, esp
  00045	8b c8		 mov	 ecx, eax
  00047	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0004a	ff d0		 call	 eax
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	89 85 00 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], eax
  00059	8b f4		 mov	 esi, esp
  0005b	6a 02		 push	 2
  0005d	8b 4d 08	 mov	 ecx, DWORD PTR _nLength$[ebp]
  00060	51		 push	 ecx
  00061	8b 95 00 ff ff
	ff		 mov	 edx, DWORD PTR tv74[ebp]
  00067	8b 02		 mov	 eax, DWORD PTR [edx]
  00069	8b 8d 00 ff ff
	ff		 mov	 ecx, DWORD PTR tv74[ebp]
  0006f	8b 10		 mov	 edx, DWORD PTR [eax]
  00071	ff d2		 call	 edx
  00073	3b f4		 cmp	 esi, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	89 45 d4	 mov	 DWORD PTR _pNewData$[ebp], eax

; 810  : 		if( pNewData == NULL )

  0007d	83 7d d4 00	 cmp	 DWORD PTR _pNewData$[ebp], 0
  00081	75 05		 jne	 SHORT $LN1@Fork

; 811  : 		{
; 812  : 			ThrowMemoryException();

  00083	e8 00 00 00 00	 call	 ?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
$LN1@Fork:

; 813  : 		}
; 814  : 		int nCharsToCopy = ((nOldLength < nLength) ? nOldLength : nLength)+1;  // Copy '\0'

  00088	8b 45 e0	 mov	 eax, DWORD PTR _nOldLength$[ebp]
  0008b	3b 45 08	 cmp	 eax, DWORD PTR _nLength$[ebp]
  0008e	7d 0b		 jge	 SHORT $LN4@Fork
  00090	8b 4d e0	 mov	 ecx, DWORD PTR _nOldLength$[ebp]
  00093	89 8d 00 ff ff
	ff		 mov	 DWORD PTR tv82[ebp], ecx
  00099	eb 09		 jmp	 SHORT $LN5@Fork
$LN4@Fork:
  0009b	8b 55 08	 mov	 edx, DWORD PTR _nLength$[ebp]
  0009e	89 95 00 ff ff
	ff		 mov	 DWORD PTR tv82[ebp], edx
$LN5@Fork:
  000a4	8b 85 00 ff ff
	ff		 mov	 eax, DWORD PTR tv82[ebp]
  000aa	83 c0 01	 add	 eax, 1
  000ad	89 45 c8	 mov	 DWORD PTR _nCharsToCopy$[ebp], eax

; 815  : 		CopyChars( PXSTR( pNewData->data() ), nCharsToCopy,
; 816  : 			PCXSTR( pOldData->data() ), nCharsToCopy );

  000b0	8b 45 c8	 mov	 eax, DWORD PTR _nCharsToCopy$[ebp]
  000b3	50		 push	 eax
  000b4	8b 4d ec	 mov	 ecx, DWORD PTR _pOldData$[ebp]
  000b7	e8 00 00 00 00	 call	 ?data@CStringData@ATL@@QAEPAXXZ ; ATL::CStringData::data
  000bc	50		 push	 eax
  000bd	8b 4d c8	 mov	 ecx, DWORD PTR _nCharsToCopy$[ebp]
  000c0	51		 push	 ecx
  000c1	8b 4d d4	 mov	 ecx, DWORD PTR _pNewData$[ebp]
  000c4	e8 00 00 00 00	 call	 ?data@CStringData@ATL@@QAEPAXXZ ; ATL::CStringData::data
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ?CopyChars@?$CSimpleStringT@_W$0A@@ATL@@SAXPA_WIPB_WH@Z ; ATL::CSimpleStringT<wchar_t,0>::CopyChars
  000cf	83 c4 10	 add	 esp, 16			; 00000010H

; 817  : 		pNewData->nDataLength = nOldLength;

  000d2	8b 45 d4	 mov	 eax, DWORD PTR _pNewData$[ebp]
  000d5	8b 4d e0	 mov	 ecx, DWORD PTR _nOldLength$[ebp]
  000d8	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 818  : 		pOldData->Release();

  000db	8b 4d ec	 mov	 ecx, DWORD PTR _pOldData$[ebp]
  000de	e8 00 00 00 00	 call	 ?Release@CStringData@ATL@@QAEXXZ ; ATL::CStringData::Release

; 819  : 		Attach( pNewData );

  000e3	8b 45 d4	 mov	 eax, DWORD PTR _pNewData$[ebp]
  000e6	50		 push	 eax
  000e7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?Attach@?$CSimpleStringT@_W$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<wchar_t,0>::Attach
$LN3@Fork:

; 820  : 	}

  000ef	5f		 pop	 edi
  000f0	5e		 pop	 esi
  000f1	5b		 pop	 ebx
  000f2	81 c4 00 01 00
	00		 add	 esp, 256		; 00000100H
  000f8	3b ec		 cmp	 ebp, esp
  000fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c2 04 00	 ret	 4
?Fork@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ENDP		; ATL::CSimpleStringT<wchar_t,0>::Fork
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ PROC ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException, COMDAT

; 795  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 796  : 		AtlThrow( E_OUTOFMEMORY );

  0001e	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00023	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN2@ThrowMemor:

; 797  : 	}

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
_TEXT	ENDS
PUBLIC	??_C@_1EC@BCBEFJPM@?$AAp?$AAO?$AAl?$AAd?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAn?$AAA?$AAl?$AAl?$AAo?$AAc?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?5?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh@ ; `string'
;	COMDAT ??_C@_1EC@BCBEFJPM@?$AAp?$AAO?$AAl?$AAd?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAn?$AAA?$AAl?$AAl?$AAo?$AAc?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?5?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh@
CONST	SEGMENT
??_C@_1EC@BCBEFJPM@?$AAp?$AAO?$AAl?$AAd?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAn?$AAA?$AAl?$AAl?$AAo?$AAc?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?5?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh@ DB 'p'
	DB	00H, 'O', 00H, 'l', 00H, 'd', 00H, 'D', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, '-', 00H, '>', 00H, 'n', 00H, 'A', 00H, 'l', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H
	DB	't', 00H, 'h', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'n', 00H, 'L'
	DB	00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_pNewData$ = -44					; size = 4
_pStringMgr$ = -32					; size = 4
_pOldData$ = -20					; size = 4
_this$ = -8						; size = 4
_nLength$ = 8						; size = 4
?Reallocate@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z PROC	; ATL::CSimpleStringT<wchar_t,0>::Reallocate, COMDAT
; _this$ = ecx

; 872  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 873  : 		CStringData* pOldData = GetData();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetData@?$CSimpleStringT@_W$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<wchar_t,0>::GetData
  0002b	89 45 ec	 mov	 DWORD PTR _pOldData$[ebp], eax

; 874  : 		ATLASSERT( pOldData->nAllocLength < nLength );

  0002e	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  00031	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00034	3b 4d 08	 cmp	 ecx, DWORD PTR _nLength$[ebp]
  00037	7c 21		 jl	 SHORT $LN6@Reallocate
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_1EC@BCBEFJPM@?$AAp?$AAO?$AAl?$AAd?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAn?$AAA?$AAl?$AAl?$AAo?$AAc?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DM?$AA?5?$AAn?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh@
  0003e	6a 00		 push	 0
  00040	68 6a 03 00 00	 push	 874			; 0000036aH
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_1JK@OKOEFEHL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAv?$AAi?$AAs?$AAu?$AAa@
  0004a	6a 02		 push	 2
  0004c	e8 00 00 00 00	 call	 __CrtDbgReportW
  00051	83 c4 14	 add	 esp, 20			; 00000014H
  00054	83 f8 01	 cmp	 eax, 1
  00057	75 01		 jne	 SHORT $LN6@Reallocate
  00059	cc		 int	 3
$LN6@Reallocate:

; 875  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;

  0005a	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	89 4d e0	 mov	 DWORD PTR _pStringMgr$[ebp], ecx

; 876  : 		if ( pOldData->nAllocLength >= nLength || nLength <= 0)

  00062	8b 45 ec	 mov	 eax, DWORD PTR _pOldData$[ebp]
  00065	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00068	3b 4d 08	 cmp	 ecx, DWORD PTR _nLength$[ebp]
  0006b	7d 06		 jge	 SHORT $LN2@Reallocate
  0006d	83 7d 08 00	 cmp	 DWORD PTR _nLength$[ebp], 0
  00071	7f 07		 jg	 SHORT $LN3@Reallocate
$LN2@Reallocate:

; 877  : 		{
; 878  : 			ThrowMemoryException();

  00073	e8 00 00 00 00	 call	 ?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException

; 879  : 			return;

  00078	eb 3a		 jmp	 SHORT $LN5@Reallocate
$LN3@Reallocate:

; 880  : 		}
; 881  : 		CStringData* pNewData = pStringMgr->Reallocate( pOldData, nLength, sizeof( XCHAR ) );

  0007a	8b f4		 mov	 esi, esp
  0007c	6a 02		 push	 2
  0007e	8b 45 08	 mov	 eax, DWORD PTR _nLength$[ebp]
  00081	50		 push	 eax
  00082	8b 4d ec	 mov	 ecx, DWORD PTR _pOldData$[ebp]
  00085	51		 push	 ecx
  00086	8b 55 e0	 mov	 edx, DWORD PTR _pStringMgr$[ebp]
  00089	8b 02		 mov	 eax, DWORD PTR [edx]
  0008b	8b 4d e0	 mov	 ecx, DWORD PTR _pStringMgr$[ebp]
  0008e	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00091	ff d2		 call	 edx
  00093	3b f4		 cmp	 esi, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	89 45 d4	 mov	 DWORD PTR _pNewData$[ebp], eax

; 882  : 		if( pNewData == NULL )

  0009d	83 7d d4 00	 cmp	 DWORD PTR _pNewData$[ebp], 0
  000a1	75 05		 jne	 SHORT $LN1@Reallocate

; 883  : 		{
; 884  : 			ThrowMemoryException();

  000a3	e8 00 00 00 00	 call	 ?ThrowMemoryException@?$CSimpleStringT@_W$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<wchar_t,0>::ThrowMemoryException
$LN1@Reallocate:

; 885  : 		}
; 886  : 		Attach( pNewData );

  000a8	8b 45 d4	 mov	 eax, DWORD PTR _pNewData$[ebp]
  000ab	50		 push	 eax
  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	e8 00 00 00 00	 call	 ?Attach@?$CSimpleStringT@_W$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<wchar_t,0>::Attach
$LN5@Reallocate:

; 887  : 	}

  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  000bd	3b ec		 cmp	 ebp, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 04 00	 ret	 4
?Reallocate@?$CSimpleStringT@_W$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<wchar_t,0>::Reallocate
_TEXT	ENDS
PUBLIC	??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__F_afxDefaultAcceleratorDelimiter@@YAXXZ
text$yd	SEGMENT
??__F_afxDefaultAcceleratorDelimiter@@YAXXZ PROC	; `dynamic atexit destructor for '_afxDefaultAcceleratorDelimiter'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __afxDefaultAcceleratorDelimiter
  00023	e8 00 00 00 00	 call	 ??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__F_afxDefaultAcceleratorDelimiter@@YAXXZ ENDP	; `dynamic atexit destructor for '_afxDefaultAcceleratorDelimiter''
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
text$yd	ENDS
;	COMDAT ??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ PROC ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >, COMDAT
; _this$ = ecx

; 1212 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1213 : 	}

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$CSimpleStringT@_W$0A@@ATL@@QAE@XZ ; ATL::CSimpleStringT<wchar_t,0>::~CSimpleStringT<wchar_t,0>
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$CStringT@_WV?$StrTraitMFC@_WV?$ChTraitsCRT@_W@ATL@@@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >::~CStringT<wchar_t,StrTraitMFC<wchar_t,ATL::ChTraitsCRT<wchar_t> > >
_TEXT	ENDS
PUBLIC	?clash@Define_the_symbol__ATL_MIXED@@3UThank_you@1@A ; Define_the_symbol__ATL_MIXED::clash
PUBLIC	?clash@Inconsistent_definition_of_symbol__ATL_MIXED@@3U_Please_define_it_the_same_throughout_your_project@1@A ; Inconsistent_definition_of_symbol__ATL_MIXED::clash
_BSS	SEGMENT
__afxDefaultAcceleratorDelimiter DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ?clash@Define_the_symbol__ATL_MIXED@@3UThank_you@1@A
_BSS	SEGMENT
?clash@Define_the_symbol__ATL_MIXED@@3UThank_you@1@A DD 01H DUP (?) ; Define_the_symbol__ATL_MIXED::clash
_BSS	ENDS
;	COMDAT ?clash@Inconsistent_definition_of_symbol__ATL_MIXED@@3U_Please_define_it_the_same_throughout_your_project@1@A
_BSS	SEGMENT
?clash@Inconsistent_definition_of_symbol__ATL_MIXED@@3U_Please_define_it_the_same_throughout_your_project@1@A DB 01H DUP (?) ; Inconsistent_definition_of_symbol__ATL_MIXED::clash
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_clash$initializer$ DD FLAT:??__Eclash@Inconsistent_definition_of_symbol__ATL_MIXED@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
_clash$initializer$ DD FLAT:??__Eclash@Define_the_symbol__ATL_MIXED@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
__afxDefaultAcceleratorDelimiter$initializer$ DD FLAT:??__E_afxDefaultAcceleratorDelimiter@@YAXXZ
CRT$XCU	ENDS
END
